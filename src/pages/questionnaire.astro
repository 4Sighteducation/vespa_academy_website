---
export const prerender = true; // This page can be statically generated

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import VespaReport from '../components/VespaReport.astro';

// VESPA statements organized by category
const statements = [
  { id: 'q1', text: "I've worked out the next steps in my life", category: 'VISION' },
  { id: 'q2', text: "I plan and organise my time to get my work done", category: 'SYSTEMS' },
  { id: 'q3', text: "I give a lot of attention to my career planning", category: 'VISION' },
  { id: 'q4', text: "I complete all my homework on time", category: 'SYSTEMS' },
  { id: 'q5', text: "No matter who you are, you can change your intelligence a lot", category: 'ATTITUDE' },
  { id: 'q6', text: "I use all my independent study time effectively", category: 'EFFORT' },
  { id: 'q7', text: "I test myself on important topics until I remember them", category: 'PRACTICE' },
  { id: 'q8', text: "I have a positive view of myself", category: 'ATTITUDE' },
  { id: 'q9', text: "I am a hard working student", category: 'EFFORT' },
  { id: 'q10', text: "I am confident in my academic ability", category: 'ATTITUDE' },
  { id: 'q11', text: "I always meet deadlines", category: 'SYSTEMS' },
  { id: 'q12', text: "I spread out my revision, rather than cramming at the last minute.", category: 'PRACTICE' },
  { id: 'q13', text: "I don't let a poor test/assessment result get me down for too long", category: 'ATTITUDE' },
  { id: 'q14', text: "I strive to achieve the goals I set for myself", category: 'VISION' },
  { id: 'q15', text: "I summarise important information in diagrams, tables or lists", category: 'PRACTICE' },
  { id: 'q16', text: "I enjoy learning new things", category: 'VISION' },
  { id: 'q17', text: "I'm not happy unless my work is the best it can be", category: 'EFFORT' },
  { id: 'q18', text: "I take good notes in class which are useful for revision", category: 'SYSTEMS' },
  { id: 'q19', text: "When revising I mix different kinds of topics/subjects in one study session", category: 'PRACTICE' },
  { id: 'q20', text: "I feel I can cope with the pressure at school/college/University", category: 'ATTITUDE' },
  { id: 'q21', text: "I work as hard as I can in most classes", category: 'EFFORT' },
  { id: 'q22', text: "My books/files are organised", category: 'SYSTEMS' },
  { id: 'q23', text: "I study by explaining difficult topics out loud", category: 'PRACTICE' },
  { id: 'q24', text: "I'm happy to ask questions in front of a group.", category: 'ATTITUDE' },
  { id: 'q25', text: "When revising, I work under timed conditions answering exam-style questions", category: 'PRACTICE' },
  { id: 'q26', text: "Your intelligence is something about you that you can change very much", category: 'ATTITUDE' },
  { id: 'q27', text: "I like hearing feedback about how I can improve", category: 'ATTITUDE' },
  { id: 'q28', text: "I can control my nerves in tests/practical assessments.", category: 'ATTITUDE' }
];

// Group statements by category for display with VESPA colors
const categories = {
  VISION: { color: 'bg-vision', textColor: 'text-vision', borderColor: 'border-vision', description: 'Your goals and future planning' },
  EFFORT: { color: 'bg-effort', textColor: 'text-effort', borderColor: 'border-effort', description: 'Your work ethic and perseverance' },
  SYSTEMS: { color: 'bg-systems', textColor: 'text-systems', borderColor: 'border-systems', description: 'Your organization and time management' },
  PRACTICE: { color: 'bg-practice', textColor: 'text-practice', borderColor: 'border-practice', description: 'Your study techniques and methods' },
  ATTITUDE: { color: 'bg-attitude', textColor: 'text-attitude', borderColor: 'border-attitude', description: 'Your mindset and resilience' }
};

const pageTitle = "VESPA Questionnaire - Assess Your Learning Mindset";
const pageDescription = "Take the VESPA questionnaire to assess your learning mindset across Vision, Effort, Systems, Practice, and Attitude.";
---

<Layout title="VESPA Questionnaire - Discover Your Learning Profile">
  <Header />
  
  <main class="pt-24">
    <!-- Hero Section with Consistent Background -->
    <section class="relative py-20 overflow-hidden bg-gradient-to-br from-theme-dark via-theme-primary to-theme-dark">
      <!-- Animated background elements -->
      <div class="absolute inset-0">
        <div class="absolute top-0 left-0 w-96 h-96 bg-theme-secondary/20 rounded-full blur-3xl animate-pulse"></div>
        <div class="absolute bottom-0 right-0 w-96 h-96 bg-theme-accent1/20 rounded-full blur-3xl animate-pulse" style="animation-delay: 1s;"></div>
      </div>
      
      <div class="container mx-auto px-6 relative z-10">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-5xl md:text-6xl font-bold text-white mb-6 fade-in-up">
            Discover Your <span class="gradient-text">Learning Profile</span>
          </h1>
          <p class="text-xl text-gray-300 mb-8 fade-in-up" style="animation-delay: 0.2s;">
            Take our validated VESPA questionnaire to understand your strengths and areas for development across five key dimensions of academic success.
          </p>
          
          <!-- VESPA Categories Display -->
          <div class="flex flex-wrap justify-center gap-3 mb-10 fade-in-up" style="animation-delay: 0.4s;">
            {Object.entries(categories).map(([key, cat]) => (
              <div class={`flex items-center gap-2 bg-white/10 backdrop-blur-sm px-4 py-2 rounded-full border ${cat.borderColor} hover:bg-white/20 transition-all`}>
                <div class={`w-8 h-8 rounded-full ${cat.color} flex items-center justify-center`}>
                  <span class="text-white font-bold text-sm">{key.charAt(0)}</span>
                </div>
                <span class="text-white font-medium">{key}</span>
              </div>
            ))}
          </div>
          
          <!-- CTA Button -->
          <button id="start-questionnaire" class="px-12 py-4 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-xl text-lg hover:scale-105 transition-transform shadow-xl fade-in-up" style="animation-delay: 0.6s;">
            Try the VESPA Questionnaire
          </button>
        </div>
      </div>
    </section>

    <!-- What is the VESPA Questionnaire Section -->
    <section class="py-20 bg-white">
      <div class="container mx-auto px-6">
        <div class="max-w-6xl mx-auto">
          <h2 class="text-4xl font-bold text-center mb-16 text-theme-dark fade-in-up">
            What is the VESPA Questionnaire?
          </h2>
          
          <!-- Main Introduction Card -->
          <div class="bg-gradient-to-br from-theme-primary/5 to-theme-secondary/5 rounded-3xl p-10 mb-12 fade-in-up" style="animation-delay: 0.2s;">
            <p class="text-lg text-gray-700 leading-relaxed text-center max-w-4xl mx-auto">
              The VESPA Questionnaire is a psychometric tool designed to help educators and students understand the behaviours and mindsets that contribute to academic success. Based on the VESPA model—Vision, Effort, Systems, Practice, and Attitude—this validated self-report questionnaire provides a snapshot of how students perceive themselves in relation to these five key areas.
            </p>
          </div>

          <!-- Features Grid -->
          <div class="grid md:grid-cols-3 gap-8 mb-16">
            <!-- Development Story -->
            <div class="bg-white rounded-2xl shadow-lg p-8 hover:shadow-xl transition-all fade-in-up" style="animation-delay: 0.3s;">
              <div class="w-16 h-16 bg-vision/20 rounded-2xl flex items-center justify-center mb-6">
                <svg class="w-8 h-8 text-vision" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Proven Success</h3>
              <p class="text-gray-600">
                Originally developed by Steve Oakes and Martin Griffin at The Blue Coat School in Oldham, leading to measurable improvements in student confidence and academic performance.
              </p>
            </div>

            <!-- Research-Based -->
            <div class="bg-white rounded-2xl shadow-lg p-8 hover:shadow-xl transition-all fade-in-up" style="animation-delay: 0.4s;">
              <div class="w-16 h-16 bg-effort/20 rounded-2xl flex items-center justify-center mb-6">
                <svg class="w-8 h-8 text-effort" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Research-Based</h3>
              <p class="text-gray-600">
                Developed with Dr. Neil Dagnall and Dr. Andrew Donovan (Manchester Metropolitan University). Trialled with 1,669 students achieving a 0.85 Cronbach's Alpha score.
              </p>
            </div>

            <!-- Immediate Results -->
            <div class="bg-white rounded-2xl shadow-lg p-8 hover:shadow-xl transition-all fade-in-up" style="animation-delay: 0.5s;">
              <div class="w-16 h-16 bg-systems/20 rounded-2xl flex items-center justify-center mb-6">
                <svg class="w-8 h-8 text-systems" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Instant Insights</h3>
              <p class="text-gray-600">
                Students receive immediate feedback with a personalised report, while educators gain access to powerful analytics and cohort insights.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- What You'll Receive Section -->
    <section class="py-20 bg-gray-50">
      <div class="container mx-auto px-6">
        <h2 class="text-4xl font-bold text-center mb-16 text-theme-dark fade-in-up">
          What You'll Receive
        </h2>
        
        <div class="max-w-6xl mx-auto">
          <!-- Student Report -->
          <div class="grid lg:grid-cols-2 gap-12 items-center mb-20">
            <div class="order-2 lg:order-1 fade-in-up" style="animation-delay: 0.2s;">
              <h3 class="text-3xl font-bold mb-6 text-theme-primary">Personalised Student Report</h3>
              <p class="text-lg text-gray-700 mb-6">
                Students receive a comprehensive report immediately after completing the questionnaire, featuring:
              </p>
              <ul class="space-y-3">
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Detailed scores across all five VESPA dimensions with visual representations</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Personalised coaching questions tailored to their specific results</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Recommended activities and strategies for improvement</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Space for reflection, goal setting, and action planning</span>
                </li>
              </ul>
            </div>
            <div class="order-1 lg:order-2 fade-in-up" style="animation-delay: 0.3s;">
              <div class="rounded-2xl overflow-hidden shadow-2xl hover:shadow-3xl transition-shadow">
                <img src="/assets/REport Main.png" alt="VESPA Student Report Example" class="w-full h-auto">
              </div>
            </div>
          </div>

          <!-- Educator Dashboard -->
          <div class="grid lg:grid-cols-2 gap-12 items-center">
            <div class="fade-in-up" style="animation-delay: 0.4s;">
              <div class="rounded-2xl overflow-hidden shadow-2xl hover:shadow-3xl transition-shadow">
                <img src="/assets/questionnaireinsights2.png" alt="VESPA Insights Dashboard" class="w-full h-auto">
              </div>
            </div>
            <div class="fade-in-up" style="animation-delay: 0.5s;">
              <h3 class="text-3xl font-bold mb-6 text-theme-primary">Educator Insights Dashboard</h3>
              <p class="text-lg text-gray-700 mb-6">
                Educators gain access to powerful analytics that transform questionnaire data into actionable insights:
              </p>
              <ul class="space-y-3">
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Cohort-wide performance metrics and trend analysis</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Individual student tracking and progress monitoring</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Word clouds and sentiment analysis from student responses</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Data-driven recommendations for targeted interventions</span>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Why Use Psychometric Tests Section -->
    <section class="py-20 bg-white">
      <div class="container mx-auto px-6">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-4xl font-bold text-center mb-12 text-theme-dark fade-in-up">
            The Science Behind VESPA
          </h2>
          
          <div class="prose prose-lg mx-auto text-gray-700 fade-in-up" style="animation-delay: 0.2s;">
            <p class="text-center text-xl mb-8">
              Psychometric testing provides systematic, standardised methods to capture a snapshot of individual characteristics like aptitude, attitudes, and personality.
            </p>
          </div>

          <div class="grid md:grid-cols-2 gap-8 mt-12">
            <div class="bg-gradient-to-br from-practice/10 to-attitude/10 rounded-2xl p-8 fade-in-up" style="animation-delay: 0.3s;">
              <h3 class="text-xl font-bold mb-4 text-theme-dark">High-Quality Assessment</h3>
              <ul class="space-y-3 text-gray-700">
                <li class="flex items-start">
                  <span class="text-practice mr-2 mt-1">•</span>
                  <span>Standardised and objective measurement</span>
                </li>
                <li class="flex items-start">
                  <span class="text-practice mr-2 mt-1">•</span>
                  <span>Clear test administration procedures</span>
                </li>
                <li class="flex items-start">
                  <span class="text-attitude mr-2 mt-1">•</span>
                  <span>Unbiased results across all test-takers</span>
                </li>
                <li class="flex items-start">
                  <span class="text-attitude mr-2 mt-1">•</span>
                  <span>Comparable results across sessions</span>
                </li>
              </ul>
            </div>

            <div class="bg-gradient-to-br from-vision/10 to-effort/10 rounded-2xl p-8 fade-in-up" style="animation-delay: 0.4s;">
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Key Benefits</h3>
              <ul class="space-y-3 text-gray-700">
                <li class="flex items-start">
                  <span class="text-vision mr-2 mt-1">•</span>
                  <span>Helps pupils recognise their abilities</span>
                </li>
                <li class="flex items-start">
                  <span class="text-vision mr-2 mt-1">•</span>
                  <span>Identifies strengths and growth areas</span>
                </li>
                <li class="flex items-start">
                  <span class="text-effort mr-2 mt-1">•</span>
                  <span>Provides educator insights into needs</span>
                </li>
                <li class="flex items-start">
                  <span class="text-effort mr-2 mt-1">•</span>
                  <span>Enhances academic performance</span>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Note from Founders -->
    <section class="py-20 bg-gradient-to-br from-theme-dark to-theme-primary text-white">
      <div class="container mx-auto px-6">
        <div class="max-w-4xl mx-auto text-center">
          <h2 class="text-4xl font-bold mb-12 fade-in-up">A Note from Steve and Martin</h2>
          
          <div class="bg-white/10 backdrop-blur-sm rounded-3xl p-10 fade-in-up" style="animation-delay: 0.2s;">
            <div class="space-y-6 text-lg leading-relaxed">
              <p>
                "We created the VESPA Questionnaire to support both individual coaching and group development. When used well, it provides the perfect starting point for productive conversations. But it's important to remember a few things.
              </p>
              <p>
                First, the questionnaire only offers a snapshot in time—a reflection of how students feel about themselves right now. It's not a permanent verdict or fixed state. Second, students are far more likely to answer honestly when they know the questionnaire is being used to support them, not judge them. Make this clear.
              </p>
              <p class="font-semibold text-theme-accent1">
                Most importantly, the aim of the VESPA questionnaire is not simply to measure—but to motivate growth and spark change."
              </p>
            </div>
          </div>
          
          <button onclick="document.getElementById('start-questionnaire').click()" class="mt-10 px-12 py-4 bg-white text-theme-dark font-bold rounded-xl text-lg hover:scale-105 transition-transform shadow-xl fade-in-up" style="animation-delay: 0.4s;">
            Try the VESPA Questionnaire
          </button>
        </div>
      </div>
    </section>

    <!-- Registration Modal -->
    <div id="registration-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden" onclick="if(event.target === this) this.classList.add('hidden')">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full relative" style="max-height: 90vh; display: flex; flex-direction: column;">
          <!-- Modal content wrapper -->
          <div class="p-6 overflow-y-auto flex-1">
            <!-- Close button -->
            <button onclick="document.getElementById('registration-modal').classList.add('hidden')" class="absolute top-3 right-3 text-gray-400 hover:text-gray-600 z-10">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
            
            <h2 class="text-2xl font-bold text-gray-800 mb-2">Register Your Interest</h2>
            <p class="text-sm text-gray-600 mb-4">Please provide your details to access the questionnaire and receive your personalised report.</p>
            
            <form id="registration-form" class="space-y-3">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Email Address *</label>
              <input type="email" name="email" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Full Name *</label>
              <input type="text" name="name" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Job Title *</label>
              <input type="text" name="jobTitle" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">School/Institution *</label>
              <input type="text" name="school" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">I'm interested in learning more about: *</label>
              <div class="grid grid-cols-2 gap-2 text-sm">
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="coaching-portal" class="mr-1.5">
                  <span>Coaching Portal</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="resource-portal" class="mr-1.5">
                  <span>Resource Portal</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="staff-training" class="mr-1.5">
                  <span>Staff Training</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="student-sessions" class="mr-1.5">
                  <span>Student Sessions</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="books" class="mr-1.5">
                  <span>Books</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="other" class="mr-1.5">
                  <span>Other</span>
                </label>
              </div>
            </div>
            
            <div class="text-xs text-gray-500 mt-4 mb-6">
              <p>* Required fields</p>
              <p class="mt-2">By submitting this form, you agree to receive communications about VESPA Academy products and services.</p>
            </div>
            
            <div class="flex gap-4 mt-6">
              <button type="button" onclick="document.getElementById('registration-modal').classList.add('hidden')" class="flex-1 px-6 py-3 bg-gray-200 text-gray-700 font-semibold rounded-lg hover:bg-gray-300 transition-colors">
                Cancel
              </button>
              <button type="submit" id="registration-submit-btn" class="flex-1 px-6 py-3 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform shadow-lg">
                Submit & Continue
              </button>
            </div>
          </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Questionnaire Modal -->
    <div id="questionnaire-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-2xl shadow-2xl max-w-2xl w-full">
          <!-- Progress Bar -->
          <div class="bg-gray-100 rounded-t-2xl p-4">
            <div class="flex justify-between items-center mb-2">
              <span class="text-sm text-gray-600">Question <span id="current-question">1</span> of 28</span>
              <span class="text-sm text-gray-600"><span id="progress-percentage">0</span>% Complete</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="progress-bar" class="bg-gradient-to-r from-theme-secondary to-theme-accent1 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
            </div>
          </div>
          
          <!-- Question Card -->
          <div class="p-8">
            <div id="question-container">
              <!-- Questions will be dynamically inserted here -->
            </div>
            
            <!-- Navigation Buttons -->
            <div class="flex justify-between mt-8">
              <button id="prev-btn" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                Previous
              </button>
              <button id="next-btn" class="px-6 py-2 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                Next
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Results Modal -->
    <div id="results-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto relative">
          <!-- Close button -->
          <button id="results-close-btn" class="absolute top-4 right-4 z-10 text-gray-400 hover:text-gray-600 bg-white rounded-full p-2 shadow-lg">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          <div id="results-content" class="p-8">
            <!-- Results will be dynamically inserted here -->
          </div>
        </div>
      </div>
    </div>

    <!-- PDF Report Container (Hidden, for generation) -->
    <div id="pdf-report-container" class="hidden">
      <div class="vespa-report">
        <!-- Report content will be generated here -->
      </div>
    </div>
  </main>

  <style>
    /* Animation styles */
    .fade-in-up {
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.8s ease-out forwards;
    }
    
    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    /* Include the ReportPrinting.css styles */
    .vespa-report { 
      width: 210mm; 
      min-height: 297mm;
      padding: 15mm;
      margin: 0 auto;
      background: white;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      font-family: 'Helvetica Neue', Arial, sans-serif;
      font-size: 10pt;
      color: #333;
      page-break-after: always;
    }
    
    .report-header { 
      display: flex; 
      align-items: center;
      justify-content: space-between; 
      border-bottom: 3px solid #23356f;
      padding-bottom: 10mm;
      margin-bottom: 10mm;
    }
    
    .header-left .logo {
      height: 50px;
    }
    
    .header-title { 
      font-size: 24pt;
      color: #23356f;
      margin: 0;
      text-align: center;
    }
    
    .header-info {
      text-align: right;
      line-height: 1.6;
    }
    
    .header-info div {
      font-size: 10pt;
    }
    
    .intro-section {
      display: flex;
      gap: 15mm;
      margin-bottom: 10mm;
      padding-bottom: 10mm;
      border-bottom: 1px solid #ddd;
    }
    
    .intro-text {
      flex: 2;
    }
    
    .intro-text h3 {
      color: #23356f;
      margin-bottom: 5mm;
    }
    
    .score-summary {
      flex: 1;
      background: #f8f9fa;
      padding: 5mm;
      border-radius: 5px;
    }
    
    .score-summary h4 {
      margin: 0 0 5mm 0;
      color: #23356f;
    }
    
    .score-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 3mm;
    }
    
    .score-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 2mm;
      background: white;
      border-radius: 3px;
    }
    
    .score-item.overall {
      grid-column: 1 / -1;
      background: #23356f;
      color: white;
    }
    
    .score-label {
      font-weight: bold;
    }
    
    .vespa-grid { 
      display: flex;
      flex-direction: column;
      gap: 8mm;
    }
    
    .vespa-block {
      display: grid;
      grid-template-columns: 80px 1fr 1fr;
      gap: 10mm;
      border: 1px solid #ddd;
      border-left-width: 6px;
      border-radius: 5px;
      padding: 8mm;
      background: #fafafa;
      page-break-inside: avoid;
    }
    
    .block-score {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      background: white;
      border-radius: 5px;
      padding: 5mm;
      box-shadow: inset 0 0 5px rgba(0,0,0,0.1);
    }
    
    .block-score .score-label {
      font-size: 9pt;
      font-weight: bold;
      color: #666;
      margin-bottom: 2mm;
    }
    
    .block-score .score-val {
      font-size: 28pt;
      font-weight: bold;
      color: #23356f;
      line-height: 1;
    }
    
    .block-score .score-max {
      font-size: 10pt;
      color: #666;
    }
    
    .block-body {
      padding-right: 5mm;
    }
    
    .block-body p {
      margin: 0 0 5mm 0;
      line-height: 1.5;
    }
    
    .questions {
      margin-top: 5mm;
    }
    
    .questions strong,
    .coaching strong,
    .activities strong {
      display: block;
      margin-bottom: 2mm;
      color: #23356f;
    }
    
    .block-questions {
      border-left: 1px solid #ddd;
      padding-left: 5mm;
    }
    
    .coaching {
      margin-bottom: 5mm;
    }
    
    .activities {
      font-style: italic;
    }
    
    .bottom-section {
      margin-top: 15mm;
      page-break-inside: avoid;
    }
    
    .bottom-section h3 {
      color: #23356f;
      border-bottom: 2px solid #23356f;
      padding-bottom: 3mm;
      margin-bottom: 8mm;
    }
    
    .response-section,
    .goals-section {
      margin-bottom: 10mm;
    }
    
    .response-section h4,
    .goals-section h4 {
      color: #23356f;
      margin-bottom: 5mm;
    }
    
    .write-box {
      border: 1px solid #999;
      min-height: 50mm;
      background: white;
      position: relative;
      padding: 5mm;
    }
    
    .write-lines {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: repeating-linear-gradient(
        transparent,
        transparent 7mm,
        #e0e0e0 7mm,
        #e0e0e0 7.5mm
      );
      pointer-events: none;
    }
    
    .date-field {
      margin-top: 5mm;
      text-align: right;
    }
    
    .date-field label {
      font-weight: bold;
      color: #666;
    }
    
    /* Question card styles */
    .question-card {
      text-align: center;
      animation: fadeIn 0.3s ease-in-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .likert-option {
      transition: all 0.2s ease;
    }
    
    .likert-option:hover {
      transform: scale(1.05);
    }
    
    .likert-option input[type="radio"]:checked + div {
      transform: scale(1.1);
      box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
    }
    
    /* Anti-abuse styles */
    .rate-limit-warning {
      background-color: #fee;
      border: 1px solid #fcc;
      color: #c33;
      padding: 1rem;
      border-radius: 0.5rem;
      margin: 1rem 0;
    }
    
    /* Simple fix to ensure form is scrollable if needed */
    #registration-modal form {
      max-height: calc(85vh - 120px);
      overflow-y: auto;
    }
  </style>

  <script>
    // State management
    let currentQuestionIndex = 0;
    let responses = {};
    let userData = {};
    let questionnaireStartTime = null;
    let isRegistered = false;
    let currentScales = null;
    let currentAverages = null;
    
    // Anti-abuse tracking
    const RATE_LIMIT_KEY = 'vespa_questionnaire_attempts';
    const MAX_ATTEMPTS_PER_DAY = 3;
    const SCHOOL_DOMAIN_PATTERNS = ['.edu', '.ac.uk', '.sch.uk', '.school', '.college'];
    
    // Statement categories for scoring
    const statementCategories = {
      q1: 'VISION', q2: 'SYSTEMS', q3: 'VISION', q4: 'SYSTEMS', q5: 'ATTITUDE',
      q6: 'EFFORT', q7: 'PRACTICE', q8: 'ATTITUDE', q9: 'EFFORT', q10: 'ATTITUDE',
      q11: 'SYSTEMS', q12: 'PRACTICE', q13: 'ATTITUDE', q14: 'VISION', q15: 'PRACTICE',
      q16: 'VISION', q17: 'EFFORT', q18: 'SYSTEMS', q19: 'PRACTICE', q20: 'ATTITUDE',
      q21: 'EFFORT', q22: 'SYSTEMS', q23: 'PRACTICE', q24: 'ATTITUDE', q25: 'PRACTICE',
      q26: 'ATTITUDE', q27: 'ATTITUDE', q28: 'ATTITUDE'
    };
    
    // Define statements directly in JavaScript
    const statements = [
      { id: 'q1', text: "I've worked out the next steps in my life", category: 'VISION' },
      { id: 'q2', text: "I plan and organise my time to get my work done", category: 'SYSTEMS' },
      { id: 'q3', text: "I give a lot of attention to my career planning", category: 'VISION' },
      { id: 'q4', text: "I complete all my homework on time", category: 'SYSTEMS' },
      { id: 'q5', text: "No matter who you are, you can change your intelligence a lot", category: 'ATTITUDE' },
      { id: 'q6', text: "I use all my independent study time effectively", category: 'EFFORT' },
      { id: 'q7', text: "I test myself on important topics until I remember them", category: 'PRACTICE' },
      { id: 'q8', text: "I have a positive view of myself", category: 'ATTITUDE' },
      { id: 'q9', text: "I am a hard working student", category: 'EFFORT' },
      { id: 'q10', text: "I am confident in my academic ability", category: 'ATTITUDE' },
      { id: 'q11', text: "I always meet deadlines", category: 'SYSTEMS' },
      { id: 'q12', text: "I spread out my revision, rather than cramming at the last minute.", category: 'PRACTICE' },
      { id: 'q13', text: "I don't let a poor test/assessment result get me down for too long", category: 'ATTITUDE' },
      { id: 'q14', text: "I strive to achieve the goals I set for myself", category: 'VISION' },
      { id: 'q15', text: "I summarise important information in diagrams, tables or lists", category: 'PRACTICE' },
      { id: 'q16', text: "I enjoy learning new things", category: 'VISION' },
      { id: 'q17', text: "I'm not happy unless my work is the best it can be", category: 'EFFORT' },
      { id: 'q18', text: "I take good notes in class which are useful for revision", category: 'SYSTEMS' },
      { id: 'q19', text: "When revising I mix different kinds of topics/subjects in one study session", category: 'PRACTICE' },
      { id: 'q20', text: "I feel I can cope with the pressure at school/college/University", category: 'ATTITUDE' },
      { id: 'q21', text: "I work as hard as I can in most classes", category: 'EFFORT' },
      { id: 'q22', text: "My books/files are organised", category: 'SYSTEMS' },
      { id: 'q23', text: "I study by explaining difficult topics out loud", category: 'PRACTICE' },
      { id: 'q24', text: "I'm happy to ask questions in front of a group.", category: 'ATTITUDE' },
      { id: 'q25', text: "When revising, I work under timed conditions answering exam-style questions", category: 'PRACTICE' },
      { id: 'q26', text: "Your intelligence is something about you that you can change very much", category: 'ATTITUDE' },
      { id: 'q27', text: "I like hearing feedback about how I can improve", category: 'ATTITUDE' },
      { id: 'q28', text: "I can control my nerves in tests/practical assessments.", category: 'ATTITUDE' }
    ];
    
    const categories = {
      VISION: { color: 'bg-vision', textColor: 'text-vision', borderColor: 'border-vision', description: 'Your goals and future planning' },
      EFFORT: { color: 'bg-effort', textColor: 'text-effort', borderColor: 'border-effort', description: 'Your work ethic and perseverance' },
      SYSTEMS: { color: 'bg-systems', textColor: 'text-systems', borderColor: 'border-systems', description: 'Your organization and time management' },
      PRACTICE: { color: 'bg-practice', textColor: 'text-practice', borderColor: 'border-practice', description: 'Your study techniques and methods' },
      ATTITUDE: { color: 'bg-attitude', textColor: 'text-attitude', borderColor: 'border-attitude', description: 'Your mindset and resilience' }
    };
    
    // Check rate limiting
    function checkRateLimit() {
      const attempts = JSON.parse(localStorage.getItem(RATE_LIMIT_KEY) || '[]');
      const today = new Date().toDateString();
      const todayAttempts = attempts.filter(a => new Date(a.timestamp).toDateString() === today);
      
      if (todayAttempts.length >= MAX_ATTEMPTS_PER_DAY) {
        return false;
      }
      
      return true;
    }
    
    // Record attempt
    function recordAttempt() {
      const attempts = JSON.parse(localStorage.getItem(RATE_LIMIT_KEY) || '[]');
      attempts.push({
        timestamp: new Date().toISOString(),
        email: userData.email,
        school: userData.school
      });
      
      // Keep only last 7 days of attempts
      const sevenDaysAgo = new Date();
      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
      const recentAttempts = attempts.filter(a => new Date(a.timestamp) > sevenDaysAgo);
      
      localStorage.setItem(RATE_LIMIT_KEY, JSON.stringify(recentAttempts));
    }
    
    // Validate email domain
    function validateEmailDomain(email) {
      const domain = email.split('@')[1];
      if (!domain) return { valid: false, isSchool: false };
      
      const isSchoolEmail = SCHOOL_DOMAIN_PATTERNS.some(pattern => domain.includes(pattern));
      
      // Additional validation for suspicious patterns
      const suspiciousPatterns = ['student', 'pupil', 'learner'];
      const emailLocal = email.split('@')[0].toLowerCase();
      const isSuspicious = suspiciousPatterns.some(pattern => emailLocal.includes(pattern));
      
      return {
        valid: true,
        isSchool: isSchoolEmail,
        isSuspicious: isSuspicious
      };
    }
    
    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
      const startBtn = document.getElementById('start-questionnaire');
      const registrationModal = document.getElementById('registration-modal');
      const questionnaireModal = document.getElementById('questionnaire-modal');
      const registrationForm = document.getElementById('registration-form');
      const resultsModal = document.getElementById('results-modal');
      const resultsCloseBtn = document.getElementById('results-close-btn');
      
      // Handle modal close events
      resultsCloseBtn.addEventListener('click', function() {
        resultsModal.classList.add('hidden');
      });
      
      // Close modal when clicking outside
      resultsModal.addEventListener('click', function(e) {
        if (e.target === resultsModal) {
          resultsModal.classList.add('hidden');
        }
      });
      
      // ESC key to close modal
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          if (!resultsModal.classList.contains('hidden')) {
            resultsModal.classList.add('hidden');
          }
          if (!registrationModal.classList.contains('hidden')) {
            registrationModal.classList.add('hidden');
          }
          if (!questionnaireModal.classList.contains('hidden')) {
            questionnaireModal.classList.add('hidden');
          }
        }
      });
      
      startBtn.addEventListener('click', function() {
        if (!checkRateLimit()) {
          alert('You have reached the maximum number of attempts for today. Please try again tomorrow.');
          return;
        }
        
        registrationModal.classList.remove('hidden');
      });
      
      // Add enter key support for form submission
      registrationForm.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && e.target.type !== 'submit') {
          e.preventDefault();
          const submitBtn = registrationForm.querySelector('button[type="submit"]');
          if (submitBtn) submitBtn.click();
        }
      });
      
      registrationForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        userData = {
          email: formData.get('email'),
          name: formData.get('name'),
          jobTitle: formData.get('jobTitle'),
          school: formData.get('school'),
          interests: formData.getAll('interests')
        };
        
        // Validate email
        const emailValidation = validateEmailDomain(userData.email);
        
        if (emailValidation.isSuspicious) {
          if (!confirm('This appears to be a student email address. This questionnaire is designed for educators. Are you an educator?')) {
            return;
          }
        }
        
        // Record the attempt
        recordAttempt();
        
        // Store user data (in production, this would be sent to a server)
        localStorage.setItem('vespa_user_data', JSON.stringify(userData));
        isRegistered = true;
        
        // Close registration modal and open questionnaire
        registrationModal.classList.add('hidden');
        startQuestionnaire();
      });
    });
    
    // Start questionnaire
    function startQuestionnaire() {
      questionnaireStartTime = new Date();
      document.getElementById('questionnaire-modal').classList.remove('hidden');
      showQuestion(0);
    }
    
    // Show question
    function showQuestion(index) {
      const container = document.getElementById('question-container');
      const statement = statements[index];
      const category = categories[statement.category];
      
      container.innerHTML = `
        <div class="question-card">
          <div class="mb-4">
            <span class="inline-flex items-center gap-2 px-4 py-2 bg-gray-100 rounded-full">
              <div class="${category.color} w-8 h-8 rounded-full flex items-center justify-center">
                <span class="text-white font-bold text-sm">${statement.category.charAt(0)}</span>
              </div>
              <span class="font-semibold ${category.textColor}">${statement.category}</span>
            </span>
          </div>
          
          <h3 class="text-2xl font-bold text-gray-800 mb-8">${statement.text}</h3>
          
          <div class="likert-scale flex justify-between items-center gap-4 max-w-lg mx-auto">
            ${[1, 2, 3, 4, 5].map(value => `
              <label class="likert-option cursor-pointer flex-1">
                <input type="radio" name="current-question" value="${value}" class="sr-only peer" 
                  ${responses[statement.id] === value ? 'checked' : ''}>
                <div class="w-16 h-16 rounded-full border-2 border-gray-300 flex items-center justify-center peer-checked:bg-gradient-to-r peer-checked:from-theme-secondary peer-checked:to-theme-accent1 peer-checked:text-white peer-checked:border-transparent hover:border-theme-secondary transition-all">
                  ${value}
                </div>
                <p class="text-xs text-gray-500 mt-2">
                  ${value === 1 ? 'Strongly<br/>Disagree' : 
                    value === 2 ? 'Disagree' : 
                    value === 3 ? 'Neutral' : 
                    value === 4 ? 'Agree' : 
                    'Strongly<br/>Agree'}
                </p>
              </label>
            `).join('')}
          </div>
        </div>
      `;
      
      // Update progress
      updateProgress(index);
      
      // Add event listeners
      const radios = container.querySelectorAll('input[type="radio"]');
      radios.forEach(radio => {
        radio.addEventListener('change', function() {
          responses[statement.id] = parseInt(this.value);
          document.getElementById('next-btn').disabled = false;
        });
      });
      
      // Update navigation buttons
      updateNavigationButtons(index);
    }
    
    // Update progress
    function updateProgress(index) {
      const percentage = Math.round(((index + 1) / statements.length) * 100);
      document.getElementById('current-question').textContent = index + 1;
      document.getElementById('progress-percentage').textContent = percentage;
      document.getElementById('progress-bar').style.width = percentage + '%';
    }
    
    // Update navigation buttons
    function updateNavigationButtons(index) {
      const prevBtn = document.getElementById('prev-btn');
      const nextBtn = document.getElementById('next-btn');
      
      prevBtn.disabled = index === 0;
      nextBtn.disabled = !responses[statements[index].id];
      
      if (index === statements.length - 1) {
        nextBtn.textContent = 'Complete';
      } else {
        nextBtn.textContent = 'Next';
      }
      
      // Remove old event listeners
      const newPrevBtn = prevBtn.cloneNode(true);
      const newNextBtn = nextBtn.cloneNode(true);
      prevBtn.parentNode.replaceChild(newPrevBtn, prevBtn);
      nextBtn.parentNode.replaceChild(newNextBtn, nextBtn);
      
      // Add new event listeners
      newPrevBtn.addEventListener('click', () => {
        if (index > 0) {
          currentQuestionIndex--;
          showQuestion(currentQuestionIndex);
        }
      });
      
      newNextBtn.addEventListener('click', () => {
        if (index < statements.length - 1) {
          currentQuestionIndex++;
          showQuestion(currentQuestionIndex);
        } else {
          completeQuestionnaire();
        }
      });
    }
    
    // Scoring functions
    function calculateScale(value, thresholds) {
      for (let i = 0; i < thresholds.length; i++) {
        if (value < thresholds[i]) return i + 1;
      }
      return 10;
    }
    
    function getVisionScale(vision) {
      return calculateScale(vision, [1.9, 2.7, 3.3, 3.6, 3.8, 4.1, 4.4, 4.7, 5.0]);
    }
    
    function getEffortScale(effort) {
      return calculateScale(effort, [2.3, 2.64, 2.95, 3.33, 3.675, 4.02, 4.365, 4.71, 5.0]);
    }
    
    function getSystemsScale(systems) {
      return calculateScale(systems, [2.16, 2.5, 2.85, 3.19, 3.53, 3.875, 4.22, 4.56, 5.0]);
    }
    
    function getPracticeScale(practice) {
      return calculateScale(practice, [1.86, 2.19, 2.53, 2.87, 3.2, 3.5, 3.87, 4.2, 5.0]);
    }
    
    function getAttitudeScale(attitude) {
      return calculateScale(attitude, [2.24, 2.53, 2.82, 3.11, 3.4, 3.69, 3.98, 4.27, 5.0]);
    }
    
    // Complete questionnaire
    function completeQuestionnaire() {
      // Calculate scores
      const categoryScores = {
        VISION: [],
        EFFORT: [],
        SYSTEMS: [],
        PRACTICE: [],
        ATTITUDE: []
      };
      
      for (const [question, value] of Object.entries(responses)) {
        const category = statementCategories[question];
        categoryScores[category].push(value);
      }
      
      const averages = {};
      for (const [category, scores] of Object.entries(categoryScores)) {
        averages[category] = scores.reduce((a, b) => a + b, 0) / scores.length;
      }
      
      const scales = {
        VISION: getVisionScale(averages.VISION),
        EFFORT: getEffortScale(averages.EFFORT),
        SYSTEMS: getSystemsScale(averages.SYSTEMS),
        PRACTICE: getPracticeScale(averages.PRACTICE),
        ATTITUDE: getAttitudeScale(averages.ATTITUDE)
      };
      
      // Close questionnaire modal
      document.getElementById('questionnaire-modal').classList.add('hidden');
      
      // Store scales and averages globally for email function
      currentScales = scales;
      currentAverages = averages;
      
      // Generate and show results
      generateReport(scales, averages);
    }
    
    // Import report text data for generating comprehensive report
    async function loadReportData() {
      try {
        const response = await fetch('/reporttext_restructured_complete.json');
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return await response.json();
      } catch (error) {
        console.error('Error loading report data:', error);
        // Return a fallback structure
        return {
          report_data: {
            'Level 3': {
              'Vision': {
                'High': { english: { description: 'You have a strong vision for your future.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You have a moderate vision for your future.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from developing a clearer vision.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing your future vision.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Effort': {
                'High': { english: { description: 'You consistently put in strong effort.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You put in good effort most of the time.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from increasing your effort.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on building consistent effort habits.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Systems': {
                'High': { english: { description: 'You have excellent organizational systems.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You have good organizational systems.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from better organization.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing organizational systems.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Practice': {
                'High': { english: { description: 'You use excellent study practices.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You use good study practices.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could improve your study practices.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing effective study practices.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Attitude': {
                'High': { english: { description: 'You have a very positive attitude.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You have a generally positive attitude.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from a more positive attitude.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing a more positive mindset.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Overall': {
                'High': { english: { description: 'Overall, you show strong learning characteristics.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'Overall, you show good learning characteristics.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'There are several areas you could focus on developing.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing your learning characteristics across all areas.', questions: '', activities: '', coaching_questions: '' } }
              }
            }
          }
        };
      }
    }
    
    // Generate report
    async function generateReport(scales, averages) {
      const reportContainer = document.getElementById('pdf-report-container');
      const resultsModal = document.getElementById('results-modal');
      const resultsContent = document.getElementById('results-content');
      
      // Load report data
      const reportData = await loadReportData();
      
      // Calculate overall score (average of all categories)
      const overallScore = Math.round(Object.values(scales).reduce((a, b) => a + b, 0) / Object.keys(scales).length);
      
      // Prepare student data for the report
      const studentData = {
        name: userData.name,
        email: userData.email,
        school: userData.school,
        date: new Date().toISOString(),
        scores: {
          vision: scales.VISION,
          effort: scales.EFFORT,
          systems: scales.SYSTEMS,
          practice: scales.PRACTICE,
          attitude: scales.ATTITUDE,
          overall: overallScore
        },
        level: 'Level 3' // Default to Level 3 for now - you can add logic to determine this
      };
      
      // Function to determine performance rating
      function getPerformanceRating(score) {
        if (score < 4) return 'Very Low';
        if (score < 6) return 'Low';
        if (score < 8) return 'Medium';
        return 'High';
      }
      
      // Function to get report content for a category
      function getReportContent(category, score, level) {
        const categoryKey = category.charAt(0).toUpperCase() + category.slice(1);
        const rating = getPerformanceRating(score);
        
        const content = reportData.report_data[level]?.[categoryKey]?.[rating]?.english || {
          description: '',
          questions: '',
          activities: '',
          coaching_questions: ''
        };
        
        return content;
      }
      
      // Generate comprehensive PDF report content
      const reportHTML = `
        <div class="vespa-report">
          <div class="report-header">
            <div class="header-left">
              <img src="/vespa-logo.png" alt="VESPA" class="logo" style="height: 50px;" />
            </div>
            <div class="header-center">
              <h1 class="header-title">VESPA Assessment Report</h1>
            </div>
            <div class="header-right">
              <div class="header-info">
                <div><strong>Name:</strong> ${studentData.name}</div>
                <div><strong>School:</strong> ${studentData.school}</div>
                <div><strong>Date:</strong> ${new Date(studentData.date).toLocaleDateString('en-GB', {
                  day: 'numeric',
                  month: 'long',
                  year: 'numeric'
                })}</div>
                <div><strong>Level:</strong> ${studentData.level}</div>
              </div>
            </div>
          </div>
          
          <div class="intro-section">
            <div class="intro-text">
              <h3>Your VESPA Profile</h3>
              <p>This report provides insights into your learning mindset across five key areas: Vision, Effort, Systems, Practice, and Attitude. Use this feedback to identify your strengths and areas for development.</p>
            </div>
            <div class="score-summary">
              <h4>Score Summary</h4>
              <div class="score-grid">
                <div class="score-item">
                  <span class="score-label">V</span>
                  <span class="score-value">${studentData.scores.vision}/10</span>
                </div>
                <div class="score-item">
                  <span class="score-label">E</span>
                  <span class="score-value">${studentData.scores.effort}/10</span>
                </div>
                <div class="score-item">
                  <span class="score-label">S</span>
                  <span class="score-value">${studentData.scores.systems}/10</span>
                </div>
                <div class="score-item">
                  <span class="score-label">P</span>
                  <span class="score-value">${studentData.scores.practice}/10</span>
                </div>
                <div class="score-item">
                  <span class="score-label">A</span>
                  <span class="score-value">${studentData.scores.attitude}/10</span>
                </div>
                <div class="score-item overall">
                  <span class="score-label">Overall</span>
                  <span class="score-value">${studentData.scores.overall}/10</span>
                </div>
              </div>
            </div>
          </div>
          
          <div class="vespa-grid">
            ${['vision', 'effort', 'systems', 'practice', 'attitude', 'overall'].map(category => {
              const score = studentData.scores[category];
              const content = getReportContent(category, score, studentData.level);
              const categoryColors = {
                vision: '#ffab40',
                effort: '#a9c8f5',
                systems: '#90d66f',
                practice: '#9c57c0',
                attitude: '#f567ea',
                overall: '#23356f'
              };
              
              return `
                <div class="vespa-block" style="border-left-color: ${categoryColors[category]}">
                  <div class="block-score">
                    <div class="score-label">${category.toUpperCase()}</div>
                    <div class="score-val">${score}</div>
                    <div class="score-max">/10</div>
                  </div>
                  <div class="block-body">
                    <p>${content.description}</p>
                    ${content.questions ? `
                      <div class="questions">
                        <strong>Questions to consider:</strong>
                        <div>${content.questions}</div>
                      </div>
                    ` : ''}
                  </div>
                  <div class="block-questions">
                    ${content.coaching_questions ? `
                      <div class="coaching">
                        <strong>Coaching Questions:</strong>
                        <div>${content.coaching_questions}</div>
                      </div>
                    ` : ''}
                    ${content.activities ? `
                      <div class="activities">
                        <strong>Suggested Activities:</strong>
                        <div>${content.activities}</div>
                      </div>
                    ` : ''}
                  </div>
                </div>
              `;
            }).join('')}
          </div>
          
          <div class="bottom-section">
            <h3>Your Reflection & Action Plan</h3>
            
            <div class="response-section">
              <h4>My Response to this Report:</h4>
              <div class="write-box">
                <div class="write-lines"></div>
              </div>
            </div>
            
            <div class="goals-section">
              <h4>My Goals:</h4>
              <div class="write-box">
                <div class="write-lines"></div>
              </div>
              <div class="date-field">
                <label>Target Date: ____________________</label>
              </div>
            </div>
          </div>
        </div>
      `;
      
      reportContainer.innerHTML = reportHTML;
      
      // Show results modal with download option
      resultsContent.innerHTML = `
        <div class="text-center mb-8">
          <h2 class="text-4xl font-bold text-gray-800 mb-4">Your VESPA Learning Profile</h2>
          <p class="text-xl text-gray-600">Here's how you scored across the five dimensions</p>
        </div>
        
        <div class="grid md:grid-cols-2 gap-8 mb-8">
          <div>
            <canvas id="vespa-chart" width="400" height="400"></canvas>
          </div>
          
          <div class="space-y-4">
            ${Object.entries(scales).map(([category, score]) => `
              <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <div class="flex items-center gap-3">
                  <div class="${categories[category].color} w-10 h-10 rounded-full flex items-center justify-center">
                    <span class="text-white font-bold">${category.charAt(0)}</span>
                  </div>
                  <div>
                    <h3 class="font-bold text-lg">${category}</h3>
                    <p class="text-sm text-gray-600">${categories[category].description}</p>
                  </div>
                </div>
                <div class="text-right">
                  <div class="text-3xl font-bold ${getScoreColor(score)}">${score}/10</div>
                  <div class="text-xs text-gray-500">Average: ${averages[category].toFixed(2)}</div>
                </div>
              </div>
            `).join('')}
          </div>
        </div>
        
        <div class="bg-gradient-to-r from-theme-secondary/10 to-theme-accent1/10 p-6 rounded-xl mb-8">
          <h3 class="text-2xl font-bold mb-4">Your Personalised Report</h3>
          <p class="text-gray-700 mb-4">
            Download your detailed VESPA report with coaching questions and recommendations, or have it emailed to you.
          </p>
          <div class="flex flex-col sm:flex-row gap-4">
            <button onclick="downloadPDF()" class="px-6 py-3 bg-white text-gray-800 font-semibold rounded-lg border-2 border-gray-300 hover:bg-gray-50 transition-colors">
              <svg class="inline-block w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
              Download PDF
            </button>
            <button onclick="emailAndGetAccess(event)" class="px-6 py-3 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform">
              <svg class="inline-block w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
              Send Me My Report
            </button>
          </div>
        </div>
        
        <div class="text-center">
          <button id="close-results-btn" class="text-gray-500 hover:text-gray-700 underline">
            Close Results
          </button>
        </div>
      `;
      
      resultsModal.classList.remove('hidden');
      
      // Add event listener for the close button within the results content
      setTimeout(() => {
        const closeBtn = document.getElementById('close-results-btn');
        if (closeBtn) {
          closeBtn.addEventListener('click', function() {
            document.getElementById('results-modal').classList.add('hidden');
          });
        }
      }, 100);
      
      // Initialize chart
      setTimeout(() => {
        try {
          const ctx = document.getElementById('vespa-chart').getContext('2d');
          if (typeof Chart !== 'undefined') {
            new Chart(ctx, {
              type: 'radar',
              data: {
                labels: Object.keys(scales),
                datasets: [{
                  label: 'Your VESPA Profile',
                  data: Object.values(scales),
                  backgroundColor: 'rgba(0, 229, 219, 0.2)',
                  borderColor: 'rgba(0, 229, 219, 1)',
                  borderWidth: 2,
                  pointBackgroundColor: 'rgba(0, 229, 219, 1)',
                  pointBorderColor: '#fff',
                  pointHoverBackgroundColor: '#fff',
                  pointHoverBorderColor: 'rgba(0, 229, 219, 1)'
                }]
              },
              options: {
                scales: {
                  r: {
                    beginAtZero: true,
                    max: 10,
                    ticks: {
                      stepSize: 2
                    }
                  }
                },
                plugins: {
                  legend: {
                    display: false
                  }
                }
              }
            });
          } else {
            console.error('Chart.js not loaded');
          }
        } catch (error) {
          console.error('Error initializing chart:', error);
        }
      }, 200);
    }
    
    function getScoreColor(score) {
      if (score >= 8) return 'text-green-600';
      if (score >= 6) return 'text-yellow-600';
      if (score >= 4) return 'text-orange-600';
      return 'text-red-600';
    }
    
    // Global variables already declared at top of script
    
    // Download PDF function
    window.downloadPDF = function() {
      // Get the report content
      const reportContent = document.getElementById('pdf-report-container').innerHTML;
      
      // Create a new window for printing
      const printWindow = window.open('', '_blank', 'width=800,height=600');
      
      // Get all the styles from the current page
      const styles = Array.from(document.querySelectorAll('style')).map(style => style.textContent).join('\n');
      
      printWindow.document.write(`
        <!DOCTYPE html>
        <html>
          <head>
            <title>VESPA Report - ${userData.name}</title>
            <style>
              ${styles}
              
              /* Additional print-specific styles */
              @media print {
                body { 
                  margin: 0;
                  -webkit-print-color-adjust: exact;
                  print-color-adjust: exact;
                }
                .vespa-report { 
                  margin: 0;
                  box-shadow: none;
                  page-break-after: always;
                }
                .vespa-block {
                  page-break-inside: avoid;
                }
                .bottom-section {
                  page-break-inside: avoid;
                }
              }
              
              /* Ensure proper rendering in the print preview */
              body {
                margin: 0;
                padding: 0;
                background: white;
              }
            </style>
          </head>
          <body>
            ${reportContent}
            <script>
              // Auto-trigger print dialog
              window.onload = function() {
                window.print();
                // Close window after printing (user can cancel if needed)
                window.onafterprint = function() {
                  window.close();
                };
              };
            <\/script>
          </body>
        </html>
      `);
      
      printWindow.document.close();
    };
    
    // Email report and get access function
    window.emailAndGetAccess = async function(event) {
      try {
        console.log('Starting email process...');
        
        // Show loading state
        const button = event.currentTarget || event.target;
        const originalText = button.innerHTML;
        button.disabled = true;
        button.innerHTML = '<svg class="inline-block w-5 h-5 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Sending report...';
        
        // Check if we have the required data
        if (!userData || !userData.email) {
          throw new Error('User data is missing');
        }
        
        if (!currentScales || !currentAverages) {
          throw new Error('Report data is missing');
        }
        
        // Get the report HTML
        const reportHTML = document.getElementById('pdf-report-container').innerHTML;
        
        if (!reportHTML) {
          throw new Error('Report HTML is missing');
        }
        
        // Add interests to userData if not already present
        if (!userData.interests) {
          userData.interests = [];
        }
        
        console.log('Sending API request...');
        
        // Send the report via API
        const response = await fetch('/api/send-report', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            userData: userData,
            reportHTML: reportHTML,
            scores: currentScales,
            averages: currentAverages,
            level: 'Level 3'
          })
        });
        
        console.log('API response status:', response.status);
        
        if (!response.ok) {
          const errorText = await response.text();
          console.error('API error response:', errorText);
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();
        console.log('API result:', result);
        
        if (result.success) {
          // Show success message
          button.innerHTML = '<svg class="inline-block w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Report sent!';
          button.classList.add('bg-green-500', 'text-white');
          button.classList.remove('from-theme-secondary', 'to-theme-accent1');
          
          // Show thank you message
          setTimeout(() => {
            const resultsContent = document.getElementById('results-content');
            resultsContent.innerHTML = `
              <div class="text-center py-12">
                <div class="mb-6">
                  <svg class="w-24 h-24 mx-auto text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <h2 class="text-3xl font-bold text-gray-800 mb-4">Report Sent Successfully!</h2>
                <p class="text-lg text-gray-600 mb-6">
                  We've emailed your VESPA report to <strong>${userData.email}</strong>
                </p>
                <p class="text-gray-600 mb-8">
                  A member of our team will be in touch shortly to discuss how the VESPA programme can help your school.
                </p>
                <div class="space-y-4">
                  <a href="/" class="inline-block px-6 py-3 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform">
                    Return to Homepage
                  </a>
                  <p class="text-sm text-gray-500">
                    Didn't receive the email? Check your spam folder or <a href="/contact" class="text-theme-secondary hover:underline">contact us</a>
                  </p>
                </div>
              </div>
            `;
          }, 1500);
        } else {
          // Show error
          throw new Error(result.error || 'Unknown error occurred');
        }
      } catch (error) {
        console.error('Error sending report:', error);
        
        // Reset button state
        const button = event.currentTarget || event.target || document.querySelector('button[onclick*="emailAndGetAccess"]');
        if (button) {
          button.innerHTML = '<svg class="inline-block w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg>Send Me My Report';
          button.disabled = false;
        }
        
        alert(`Sorry, there was an error sending your report: ${error.message}. Please try downloading the PDF instead or contact support.`);
      }
    };
  </script>
  
  <!-- Include Chart.js for the radar chart -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</Layout>
