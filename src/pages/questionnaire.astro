---
export const prerender = true; // This page can be statically generated

import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import VespaReport from '../components/VespaReport.astro';

// VESPA statements organized by category
const statements = [
  { id: 'q1', text: "I've worked out the next steps in my life", category: 'VISION' },
  { id: 'q2', text: "I plan and organise my time to get my work done", category: 'SYSTEMS' },
  { id: 'q3', text: "I give a lot of attention to my career planning", category: 'VISION' },
  { id: 'q4', text: "I complete all my homework on time", category: 'SYSTEMS' },
  { id: 'q5', text: "No matter who you are, you can change your intelligence a lot", category: 'ATTITUDE' },
  { id: 'q6', text: "I use all my independent study time effectively", category: 'EFFORT' },
  { id: 'q7', text: "I test myself on important topics until I remember them", category: 'PRACTICE' },
  { id: 'q8', text: "I have a positive view of myself", category: 'ATTITUDE' },
  { id: 'q9', text: "I am a hard working student", category: 'EFFORT' },
  { id: 'q10', text: "I am confident in my academic ability", category: 'ATTITUDE' },
  { id: 'q11', text: "I always meet deadlines", category: 'SYSTEMS' },
  { id: 'q12', text: "I spread out my revision, rather than cramming at the last minute.", category: 'PRACTICE' },
  { id: 'q13', text: "I don't let a poor test/assessment result get me down for too long", category: 'ATTITUDE' },
  { id: 'q14', text: "I strive to achieve the goals I set for myself", category: 'VISION' },
  { id: 'q15', text: "I summarise important information in diagrams, tables or lists", category: 'PRACTICE' },
  { id: 'q16', text: "I enjoy learning new things", category: 'VISION' },
  { id: 'q17', text: "I'm not happy unless my work is the best it can be", category: 'EFFORT' },
  { id: 'q18', text: "I take good notes in class which are useful for revision", category: 'SYSTEMS' },
  { id: 'q19', text: "When revising I mix different kinds of topics/subjects in one study session", category: 'PRACTICE' },
  { id: 'q20', text: "I feel I can cope with the pressure at school/college/University", category: 'ATTITUDE' },
  { id: 'q21', text: "I work as hard as I can in most classes", category: 'EFFORT' },
  { id: 'q22', text: "My books/files are organised", category: 'SYSTEMS' },
  { id: 'q23', text: "I study by explaining difficult topics out loud", category: 'PRACTICE' },
  { id: 'q24', text: "I'm happy to ask questions in front of a group.", category: 'ATTITUDE' },
  { id: 'q25', text: "When revising, I work under timed conditions answering exam-style questions", category: 'PRACTICE' },
  { id: 'q26', text: "Your intelligence is something about you that you can change very much", category: 'ATTITUDE' },
  { id: 'q27', text: "I like hearing feedback about how I can improve", category: 'ATTITUDE' },
  { id: 'q28', text: "I can control my nerves in tests/practical assessments.", category: 'ATTITUDE' }
];

// Group statements by category for display with VESPA colors
const categories = {
  VISION: { color: 'bg-vision', textColor: 'text-vision', borderColor: 'border-vision', description: 'Your goals and future planning' },
  EFFORT: { color: 'bg-effort', textColor: 'text-effort', borderColor: 'border-effort', description: 'Your work ethic and perseverance' },
  SYSTEMS: { color: 'bg-systems', textColor: 'text-systems', borderColor: 'border-systems', description: 'Your organization and time management' },
  PRACTICE: { color: 'bg-practice', textColor: 'text-practice', borderColor: 'border-practice', description: 'Your study techniques and methods' },
  ATTITUDE: { color: 'bg-attitude', textColor: 'text-attitude', borderColor: 'border-attitude', description: 'Your mindset and resilience' }
};

const pageTitle = "VESPA Questionnaire - Assess Your Learning Mindset";
const pageDescription = "Take the VESPA questionnaire to assess your learning mindset across Vision, Effort, Systems, Practice, and Attitude.";
---

<Layout title="VESPA Questionnaire - Discover Your Learning Profile">
  <Header />
  
  <main class="pt-24">
    <!-- Hero Section with Animated Background -->
    <section class="relative h-screen flex flex-col justify-between text-center overflow-hidden">
      <!-- Animated Background -->
      <div class="absolute inset-0 z-0">
        <div class="absolute inset-0 bg-gradient-to-br from-theme-dark via-theme-primary to-theme-dark opacity-90"></div>
        <!-- Floating shapes -->
        <div class="floating-shapes">
          <div class="shape shape-1"></div>
          <div class="shape shape-2"></div>
          <div class="shape shape-3"></div>
          <div class="shape shape-4"></div>
          <div class="shape shape-5"></div>
        </div>
      </div>
      
      <div class="flex-1 flex items-center justify-center">
        <div class="container mx-auto px-6 relative z-10 pt-20">
          <h1 class="text-4xl md:text-6xl lg:text-7xl font-extrabold leading-tight mb-4 text-white" 
            data-aos="fade-up" 
            data-aos-duration="1200">
            Discover Your
            <span class="block vespa-gradient-text text-5xl md:text-7xl lg:text-8xl mt-2">VESPA Profile</span>
          </h1>
          <p class="text-lg md:text-xl lg:text-2xl text-gray-300 mb-8 max-w-3xl mx-auto" 
            data-aos="fade-up" 
            data-aos-delay="200">
            Take our validated VESPA questionnaire to understand your strengths and areas for development across five key dimensions of academic success.
          </p>
          
          <!-- VESPA Categories Display -->
          <div class="flex flex-wrap justify-center gap-3 mb-10" data-aos="fade-up" data-aos-delay="400">
            {Object.entries(categories).map(([key, cat]) => (
              <div class={`flex items-center gap-2 bg-white/10 backdrop-blur-sm px-4 py-2 rounded-full border ${cat.borderColor} hover:bg-white/20 transition-all`}>
                <div class={`w-8 h-8 rounded-full ${cat.color} flex items-center justify-center`}>
                  <span class="text-white font-bold text-sm">{key.charAt(0)}</span>
                </div>
                <span class="text-white font-medium">{key}</span>
              </div>
            ))}
          </div>
          
          <!-- CTA Button -->
          <button id="start-questionnaire" class="btn-primary group" data-aos="fade-up" data-aos-delay="600">
            <span class="relative z-10">Try the VESPA Questionnaire</span>
            <div class="btn-glow"></div>
          </button>
        </div>
      </div>
      
      <!-- Scroll Indicator -->
      <div class="relative z-10 pb-8 animate-bounce">
        <svg class="w-12 h-12 text-white mx-auto drop-shadow-lg" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="3">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
        </svg>
      </div>
    </section>

    <!-- What is the VESPA Questionnaire Section with Background Image -->
    <section class="py-20 bg-white relative overflow-hidden">
      <!-- Background Image with Overlay -->
      <div class="absolute inset-0 z-0">
        <div class="parallax-bg h-full w-full opacity-10" data-speed="0.2"
          style="background-image: url('/assets/pexels-stanley-morales-1454360-2000x1333.jpg'); background-size: cover; background-position: center;">
        </div>
      </div>
      
      <div class="container mx-auto px-6 relative z-10">
        <div class="max-w-6xl mx-auto">
          <h2 class="text-4xl font-bold text-center mb-16 text-theme-dark fade-in-up">
            What is the VESPA Questionnaire?
          </h2>
          
          <!-- Main Introduction Card -->
          <div class="bg-gradient-to-br from-theme-primary/5 to-theme-secondary/5 rounded-3xl p-10 mb-12 fade-in-up" style="animation-delay: 0.2s;">
            <p class="text-lg text-gray-700 leading-relaxed text-center max-w-4xl mx-auto">
              The VESPA Questionnaire is a psychometric tool designed to help educators and students understand the behaviours and mindsets that contribute to academic success. Based on the VESPA model—Vision, Effort, Systems, Practice, and Attitude—this validated self-report questionnaire provides a snapshot of how students perceive themselves in relation to these five key areas.
            </p>
          </div>

          <!-- Features Grid -->
          <div class="grid md:grid-cols-3 gap-8 mb-16">
            <!-- Development Story -->
            <div class="bg-white rounded-2xl shadow-lg p-8 hover:shadow-xl transition-all fade-in-up" style="animation-delay: 0.3s;">
              <div class="w-16 h-16 bg-vision/20 rounded-2xl flex items-center justify-center mb-6">
                <svg class="w-8 h-8 text-vision" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Proven Success</h3>
              <p class="text-gray-600">
                Originally developed by Steve Oakes and Martin Griffin at The Blue Coat School in Oldham, leading to measurable improvements in student confidence and academic performance.
              </p>
            </div>

            <!-- Research-Based -->
            <div class="bg-white rounded-2xl shadow-lg p-8 hover:shadow-xl transition-all fade-in-up" style="animation-delay: 0.4s;">
              <div class="w-16 h-16 bg-effort/20 rounded-2xl flex items-center justify-center mb-6">
                <svg class="w-8 h-8 text-effort" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Research-Based</h3>
              <p class="text-gray-600">
                Developed with Dr. Neil Dagnall and Dr. Andrew Donovan (Manchester Metropolitan University). Trialled with 1,669 students achieving a 0.85 Cronbach's Alpha score.
              </p>
            </div>

            <!-- Immediate Results -->
            <div class="bg-white rounded-2xl shadow-lg p-8 hover:shadow-xl transition-all fade-in-up" style="animation-delay: 0.5s;">
              <div class="w-16 h-16 bg-systems/20 rounded-2xl flex items-center justify-center mb-6">
                <svg class="w-8 h-8 text-systems" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Instant Insights</h3>
              <p class="text-gray-600">
                Students receive immediate feedback with a personalised report, while educators gain access to powerful analytics and cohort insights.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Note from Founders - Enhanced and Prominent -->
    <section class="py-24 bg-gradient-to-br from-theme-primary via-theme-dark to-theme-accent2 text-white relative overflow-hidden">
      <!-- Background Pattern -->
      <div class="absolute inset-0 opacity-10">
        <div class="absolute top-0 left-0 w-96 h-96 bg-theme-secondary rounded-full blur-3xl animate-pulse"></div>
        <div class="absolute bottom-0 right-0 w-96 h-96 bg-theme-accent1 rounded-full blur-3xl animate-pulse" style="animation-delay: 1s;"></div>
      </div>
      
      <div class="container mx-auto px-6 relative z-10">
        <div class="max-w-5xl mx-auto">
          <!-- Enhanced Header -->
          <div class="text-center mb-16 fade-in-up">
            <div class="inline-flex items-center gap-4 mb-6">
              <div class="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center">
                <svg class="w-8 h-8 text-theme-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10m0 0V6a2 2 0 00-2-2H9a2 2 0 00-2 2v2m10 0v10a2 2 0 01-2 2H9a2 2 0 01-2-2V8m10 0H7"></path>
                </svg>
              </div>
              <h2 class="text-4xl md:text-5xl font-bold">A Note from Steve and Martin</h2>
            </div>
            <p class="text-xl text-gray-200">The creators of the VESPA model share their insights</p>
          </div>
          
          <!-- Enhanced Quote Card -->
          <div class="bg-white/10 backdrop-blur-lg rounded-3xl p-10 md:p-12 shadow-2xl border border-white/20 fade-in-up" style="animation-delay: 0.2s;">
            <div class="grid md:grid-cols-2 gap-8 items-center mb-8">
              <!-- Photos -->
              <div class="flex justify-center gap-6">
                <div class="text-center">
                  <img src="/assets/steveoakes.webp" alt="Steve Oakes" class="w-20 h-20 rounded-full mx-auto mb-2 ring-4 ring-white/30">
                  <p class="text-sm font-semibold text-theme-secondary">Steve Oakes</p>
                </div>
                <div class="text-center">
                  <img src="/assets/martingriffin.jpg" alt="Martin Griffin" class="w-20 h-20 rounded-full mx-auto mb-2 ring-4 ring-white/30">
                  <p class="text-sm font-semibold text-theme-secondary">Martin Griffin</p>
                </div>
              </div>
              <!-- Quote Icon -->
              <div class="flex justify-center md:justify-end">
                <div class="w-16 h-16 bg-theme-secondary/20 rounded-full flex items-center justify-center">
                  <svg class="w-8 h-8 text-theme-secondary" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-10zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z"/>
                  </svg>
                </div>
              </div>
            </div>
            
            <div class="space-y-6 text-lg md:text-xl leading-relaxed">
              <p class="italic">
                "We created the VESPA Questionnaire to support both individual coaching and group development. When used well, it provides the perfect starting point for productive conversations. But it's important to remember a few things."
              </p>
              <p>
                "First, the questionnaire only offers a snapshot in time—a reflection of how students feel about themselves right now. It's not a permanent verdict or fixed state. Second, students are far more likely to answer honestly when they know the questionnaire is being used to support them, not judge them. Make this clear."
              </p>
              <p class="font-bold text-theme-accent1 text-2xl border-l-4 border-theme-accent1 pl-6">
                "Most importantly, the aim of the VESPA questionnaire is not simply to measure—but to motivate growth and spark change."
              </p>
            </div>
          </div>
          
          <!-- Enhanced CTA -->
          <div class="text-center mt-12 fade-in-up" style="animation-delay: 0.4s;">
            <button onclick="document.getElementById('start-questionnaire').click()" class="px-12 py-4 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-xl text-lg hover:scale-105 transition-all shadow-xl hover:shadow-2xl">
              <span class="flex items-center gap-3 justify-center">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
                Try the VESPA Questionnaire
              </span>
            </button>
            <p class="mt-4 text-gray-300 text-sm">Start your journey with VESPA - it takes just 5 minutes</p>
          </div>
        </div>
      </div>
    </section>

    <!-- What You'll Receive Section -->
    <section class="py-20 bg-gray-50">
      <div class="container mx-auto px-6">
        <h2 class="text-4xl font-bold text-center mb-16 text-theme-dark fade-in-up">
          What You'll Receive
        </h2>
        
        <div class="max-w-6xl mx-auto">
          <!-- Student Report -->
          <div class="grid lg:grid-cols-2 gap-12 items-center mb-20">
            <div class="order-2 lg:order-1 fade-in-up" style="animation-delay: 0.2s;">
              <h3 class="text-3xl font-bold mb-6 text-theme-primary">Personalised Student Report</h3>
              <p class="text-lg text-gray-700 mb-6">
                Students receive a comprehensive report immediately after completing the questionnaire, featuring:
              </p>
              <ul class="space-y-3">
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Detailed scores across all five VESPA dimensions with visual representations</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Personalised coaching questions tailored to their specific results</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Recommended activities and strategies for improvement</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  <span class="text-gray-700">Space for reflection, goal setting, and action planning</span>
                </li>
              </ul>
            </div>
            <div class="order-1 lg:order-2 fade-in-up" style="animation-delay: 0.3s;">
              <div class="rounded-2xl overflow-hidden shadow-2xl hover:shadow-3xl transition-shadow">
                <img src="/assets/REport Main.png" alt="VESPA Student Report Example" class="w-full h-auto">
              </div>
            </div>
          </div>

          <!-- Educator Dashboard -->
          <div class="grid lg:grid-cols-2 gap-12 items-center">
            <div class="fade-in-up" style="animation-delay: 0.4s;">
              <div class="rounded-2xl overflow-hidden shadow-2xl hover:shadow-3xl transition-shadow">
                <img src="/assets/questionnaireinsights2.png" alt="VESPA Insights Dashboard" class="w-full h-auto">
              </div>
            </div>
            <div class="fade-in-up" style="animation-delay: 0.5s;">
              <h3 class="text-3xl font-bold mb-6 text-theme-primary">Educator Insights Dashboard</h3>
              <p class="text-lg text-gray-700 mb-6">
                Educators gain access to powerful analytics that transform questionnaire data into actionable insights:
              </p>
              <ul class="space-y-3">
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Cohort-wide performance metrics and trend analysis</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Individual student tracking and progress monitoring</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Word clouds and sentiment analysis from student responses</span>
                </li>
                <li class="flex items-start">
                  <svg class="w-6 h-6 text-theme-secondary mr-3 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                  </svg>
                  <span class="text-gray-700">Data-driven recommendations for targeted interventions</span>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Why Use Psychometric Tests Section -->
    <section class="py-20 bg-white">
      <div class="container mx-auto px-6">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-4xl font-bold text-center mb-12 text-theme-dark fade-in-up">
            The Science Behind VESPA
          </h2>
          
          <div class="prose prose-lg mx-auto text-gray-700 fade-in-up" style="animation-delay: 0.2s;">
            <p class="text-center text-xl mb-8">
              Psychometric testing provides systematic, standardised methods to capture a snapshot of individual characteristics like aptitude, attitudes, and personality.
            </p>
          </div>

          <div class="grid md:grid-cols-2 gap-8 mt-12">
            <div class="bg-gradient-to-br from-practice/10 to-attitude/10 rounded-2xl p-8 fade-in-up" style="animation-delay: 0.3s;">
              <h3 class="text-xl font-bold mb-4 text-theme-dark">High-Quality Assessment</h3>
              <ul class="space-y-3 text-gray-700">
                <li class="flex items-start">
                  <span class="text-practice mr-2 mt-1">•</span>
                  <span>Standardised and objective measurement</span>
                </li>
                <li class="flex items-start">
                  <span class="text-practice mr-2 mt-1">•</span>
                  <span>Clear test administration procedures</span>
                </li>
                <li class="flex items-start">
                  <span class="text-attitude mr-2 mt-1">•</span>
                  <span>Unbiased results across all test-takers</span>
                </li>
                <li class="flex items-start">
                  <span class="text-attitude mr-2 mt-1">•</span>
                  <span>Comparable results across sessions</span>
                </li>
              </ul>
            </div>

            <div class="bg-gradient-to-br from-vision/10 to-effort/10 rounded-2xl p-8 fade-in-up" style="animation-delay: 0.4s;">
              <h3 class="text-xl font-bold mb-4 text-theme-dark">Key Benefits</h3>
              <ul class="space-y-3 text-gray-700">
                <li class="flex items-start">
                  <span class="text-vision mr-2 mt-1">•</span>
                  <span>Helps pupils recognise their abilities</span>
                </li>
                <li class="flex items-start">
                  <span class="text-vision mr-2 mt-1">•</span>
                  <span>Identifies strengths and growth areas</span>
                </li>
                <li class="flex items-start">
                  <span class="text-effort mr-2 mt-1">•</span>
                  <span>Provides educator insights into needs</span>
                </li>
                <li class="flex items-start">
                  <span class="text-effort mr-2 mt-1">•</span>
                  <span>Enhances academic performance</span>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </section>



    <!-- Registration Modal -->
    <div id="registration-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden" onclick="if(event.target === this) this.classList.add('hidden')">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full relative" style="max-height: 90vh; display: flex; flex-direction: column;">
          <!-- Modal content wrapper -->
          <div class="p-6 overflow-y-auto flex-1">
            <!-- Close button -->
            <button onclick="document.getElementById('registration-modal').classList.add('hidden')" class="absolute top-3 right-3 text-gray-400 hover:text-gray-600 z-10">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
            
            <h2 class="text-2xl font-bold text-gray-800 mb-2">Register Your Interest</h2>
            <p class="text-sm text-gray-600 mb-4">Please provide your details to access the questionnaire and receive your personalised report.</p>
            
            <form id="registration-form" class="space-y-3">
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Email Address *</label>
              <input type="email" name="email" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Full Name *</label>
              <input type="text" name="name" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Job Title *</label>
              <input type="text" name="jobTitle" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">School/Institution *</label>
              <input type="text" name="school" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">Report Level *</label>
              <select name="level" required class="w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-theme-secondary focus:border-transparent">
                <option value="">Please select...</option>
                <option value="Level 2">Level 2 (Key Stage 4 / GCSE)</option>
                <option value="Level 3">Level 3 (Key Stage 5 / A Level)</option>
              </select>
              <p class="text-xs text-gray-500 mt-1">Choose the level that best matches your students' current stage</p>
            </div>
            
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-1">I'm interested in learning more about: *</label>
              <div class="grid grid-cols-2 gap-2 text-sm">
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="coaching-portal" class="mr-1.5">
                  <span>Coaching Portal</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="resource-portal" class="mr-1.5">
                  <span>Resource Portal</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="staff-training" class="mr-1.5">
                  <span>Staff Training</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="student-sessions" class="mr-1.5">
                  <span>Student Sessions</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="books" class="mr-1.5">
                  <span>Books</span>
                </label>
                <label class="flex items-center">
                  <input type="checkbox" name="interests" value="other" class="mr-1.5">
                  <span>Other</span>
                </label>
              </div>
            </div>
            
            <div class="text-xs text-gray-500 mt-4 mb-6">
              <p>* Required fields</p>
              <p class="mt-2">By submitting this form, you agree to receive communications about VESPA Academy products and services.</p>
            </div>
            
            <div class="flex gap-4 mt-6">
              <button type="button" onclick="document.getElementById('registration-modal').classList.add('hidden')" class="flex-1 px-6 py-3 bg-gray-200 text-gray-700 font-semibold rounded-lg hover:bg-gray-300 transition-colors">
                Cancel
              </button>
              <button type="submit" id="registration-submit-btn" class="flex-1 px-6 py-3 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform shadow-lg">
                Submit & Continue
              </button>
            </div>
          </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Questionnaire Modal -->
    <div id="questionnaire-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-2xl shadow-2xl max-w-2xl w-full">
          <!-- Progress Bar -->
          <div class="bg-gray-100 rounded-t-2xl p-4">
            <div class="flex justify-between items-center mb-2">
              <span class="text-sm text-gray-600">Question <span id="current-question">1</span> of 28</span>
              <span class="text-sm text-gray-600"><span id="progress-percentage">0</span>% Complete</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="progress-bar" class="bg-gradient-to-r from-theme-secondary to-theme-accent1 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
            </div>
          </div>
          
          <!-- Question Card -->
          <div class="p-8">
            <div id="question-container">
              <!-- Questions will be dynamically inserted here -->
            </div>
            
            <!-- Navigation Buttons -->
            <div class="flex justify-between mt-8">
              <button id="prev-btn" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                Previous
              </button>
              <button id="next-btn" class="px-6 py-2 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                Next
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Results Modal -->
    <div id="results-modal" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden">
      <div class="flex items-start justify-center min-h-screen p-4 py-8">
        <div class="bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto relative">
          <!-- Close button -->
          <button id="results-close-btn" class="absolute top-4 right-4 z-10 text-gray-400 hover:text-gray-600 bg-white rounded-full p-2 shadow-lg">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          <div id="results-content" class="p-8">
            <!-- Results will be dynamically inserted here -->
          </div>
        </div>
      </div>
    </div>

    <!-- PDF Report Container (Hidden, for generation) -->
    <div id="pdf-report-container" class="hidden">
      <div class="vespa-report">
        <!-- Report content will be generated here -->
      </div>
    </div>
  </main>

  <style>
    /* Animation styles */
    .fade-in-up {
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.8s ease-out forwards;
    }
    
    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Button styles */
    .btn-primary {
      @apply relative inline-flex items-center px-8 py-4 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-xl text-lg overflow-hidden transition-all duration-300 transform hover:scale-105 shadow-xl;
    }

    .btn-glow {
      @apply absolute inset-0 bg-gradient-to-r from-theme-secondary to-theme-accent1 opacity-0 blur-3xl transition-opacity duration-300;
    }

    .btn-primary:hover .btn-glow {
      opacity: 0.4;
    }

    /* Floating shapes animation */
    .floating-shapes {
      @apply absolute inset-0 overflow-hidden;
    }

    .shape {
      @apply absolute rounded-full opacity-10;
      animation: float 20s infinite ease-in-out;
    }

    .shape-1 {
      @apply w-64 h-64 bg-theme-secondary -top-32 -left-32;
      animation-delay: 0s;
    }

    .shape-2 {
      @apply w-96 h-96 bg-theme-accent1 -bottom-48 -right-48;
      animation-delay: 5s;
    }

    .shape-3 {
      @apply w-80 h-80 bg-effort top-1/2 -left-40;
      animation-delay: 10s;
    }

    .shape-4 {
      @apply w-72 h-72 bg-vision -top-36 right-1/4;
      animation-delay: 15s;
    }

    .shape-5 {
      @apply w-56 h-56 bg-practice bottom-1/4 right-1/3;
      animation-delay: 7.5s;
    }

    @keyframes float {
      0%, 100% { transform: translate(0, 0) rotate(0deg); }
      25% { transform: translate(100px, 100px) rotate(90deg); }
      50% { transform: translate(-50px, 200px) rotate(180deg); }
      75% { transform: translate(200px, -100px) rotate(270deg); }
    }

    /* VESPA Gradient Text with Individual Colors */
    .vespa-gradient-text {
      background: linear-gradient(90deg, 
        #ff8f00 0% 20%,    /* V - Vision (orange) */
        #86b4f0 20% 40%,   /* E - Effort (light blue) */
        #72cb44 40% 60%,   /* S - Systems (green) */
        #7f31a4 60% 80%,   /* P - Practice (purple) */
        #f032e6 80% 100%   /* A - Attitude (pink) */
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-shadow: none;
      font-weight: bold;
    }
    
    /* Include the ReportPrinting.css styles */
    .vespa-report { 
      width: 210mm; 
      min-height: 297mm;
      padding: 15mm;
      margin: 0 auto;
      background: white;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      font-family: 'Helvetica Neue', Arial, sans-serif;
      font-size: 10pt;
      color: #333;
      page-break-after: always;
    }
    
    .report-header { 
      display: flex; 
      align-items: center;
      justify-content: space-between; 
      border-bottom: 3px solid #23356f;
      padding-bottom: 10mm;
      margin-bottom: 10mm;
    }
    
    .header-left .logo {
      height: 50px;
    }
    
    .header-title { 
      font-size: 24pt;
      color: #23356f;
      margin: 0;
      text-align: center;
    }
    
    .header-info {
      text-align: right;
      line-height: 1.6;
    }
    
    .header-info div {
      font-size: 10pt;
    }
    
    .intro-section {
      display: flex;
      gap: 15mm;
      margin-bottom: 10mm;
      padding-bottom: 10mm;
      border-bottom: 1px solid #ddd;
    }
    
    .intro-text {
      flex: 2;
    }
    
    .intro-text h3 {
      color: #23356f;
      margin-bottom: 5mm;
    }
    
    .score-summary {
      flex: 1;
      background: #f8f9fa;
      padding: 5mm;
      border-radius: 5px;
    }
    
    .score-summary h4 {
      margin: 0 0 5mm 0;
      color: #23356f;
    }
    
    .score-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 3mm;
    }
    
    .score-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 2mm;
      background: white;
      border-radius: 3px;
    }
    
    .score-item.overall {
      grid-column: 1 / -1;
      background: #23356f;
      color: white;
    }
    
    .score-label {
      font-weight: bold;
    }
    
    /* VESPA Report Styles - Matching Reference Image */
    .vespa-report {
      width: 210mm;
      min-height: 297mm;
      padding: 6mm;
      font-family: Arial, sans-serif;
      font-size: 9pt;
      line-height: 1.3;
      background: white;
      page-break-after: always;
    }
    
    .report-header {
      display: grid;
      grid-template-columns: 1fr 2fr 1fr;
      gap: 10mm;
      margin-bottom: 8mm;
      padding-bottom: 5mm;
      border-bottom: 2px solid #000;
    }
    
    .student-info {
      font-size: 10pt;
      line-height: 1.6;
    }
    
    .student-info div {
      margin-bottom: 2mm;
    }
    
    .cycle-number {
      display: inline-block;
      background: #23356f;
      color: white;
      width: 20px;
      height: 20px;
      text-align: center;
      border-radius: 50%;
      font-weight: bold;
      line-height: 20px;
    }
    
    .intro-questions {
      font-size: 8pt;
    }
    
    .intro-questions h4 {
      margin: 0 0 3mm 0;
      font-size: 10pt;
      font-weight: bold;
    }
    
    .intro-questions ul {
      margin: 0;
      padding-left: 12px;
      list-style: disc;
    }
    
    .intro-questions li {
      margin-bottom: 2mm;
    }
    
    .vespa-chart-placeholder {
      border: 1px solid #ccc;
      padding: 10mm;
      text-align: center;
      font-size: 10pt;
      background: #f9f9f9;
      height: 40mm;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .vespa-main-content {
      margin-top: 8mm;
    }
    
    .vespa-report-header {
      display: grid;
      grid-template-columns: 1fr 1fr;
      background: #e74c3c;
      color: white;
      padding: 3mm;
      font-weight: bold;
      font-size: 11pt;
      margin-bottom: 2mm;
    }
    
    .vespa-row {
      display: grid;
      grid-template-columns: 50mm 1fr 1fr;
      border: 1px solid #ddd;
      margin-bottom: 1mm;
      background: white;
      page-break-inside: avoid;
    }
    
    .vespa-element {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 4mm;
      background: #f8f9fa;
    }
    
    .element-header {
      width: 100%;
      padding: 2mm;
      border-radius: 4px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: white;
      font-weight: bold;
      margin-bottom: 3mm;
    }
    
    .element-letter {
      font-size: 18pt;
      font-weight: bold;
    }
    
    .element-score {
      text-align: center;
    }
    
    .score-number {
      font-size: 24pt;
      font-weight: bold;
      line-height: 1;
    }
    
    .score-max {
      font-size: 8pt;
      opacity: 0.8;
    }
    
    .element-name {
      font-size: 10pt;
      font-weight: bold;
      margin-bottom: 1mm;
    }
    
    .element-description {
      font-size: 8pt;
      color: #666;
    }
    
    .vespa-description,
    .coaching-questions {
      padding: 4mm;
      font-size: 8pt;
      line-height: 1.4;
    }
    
    .description-text {
      margin-bottom: 3mm;
      font-weight: normal;
      line-height: 1.5;
    }
    
    .average-score {
      font-size: 7pt;
      color: #666;
      margin-bottom: 3mm;
      font-style: italic;
    }
    
    .reflection-questions,
    .suggested-activities,
    .coaching-content,
    .suggested-activities-detailed {
      margin-bottom: 3mm;
    }
    
    .reflection-questions strong,
    .suggested-activities strong,
    .suggested-activities-detailed strong {
      font-size: 8pt;
      font-weight: bold;
      display: block;
      margin-bottom: 1mm;
    }
    
    .coaching-questions {
      border-left: 1px solid #eee;
      background: #fafbfc;
    }
    
    .coaching-content {
      font-size: 8pt;
      line-height: 1.4;
      margin-bottom: 3mm;
    }
    
    .personal-reflection,
    .action-plan {
      margin-top: 8mm;
      border-top: 1px solid #ccc;
      padding-top: 4mm;
    }
    
    .personal-reflection h3,
    .action-plan h3 {
      font-size: 12pt;
      font-weight: bold;
      margin: 0 0 3mm 0;
    }
    
    .reflection-question,
    .action-question {
      margin-bottom: 3mm;
      font-size: 9pt;
    }
    
    .write-area {
      border: 1px solid #ddd;
      min-height: 15mm;
      background: #fdfdfd;
      padding: 2mm;
    }
    
    .vespa-grid { 
      display: flex;
      flex-direction: column;
      gap: 8mm;
    }
    
    .vespa-block {
      display: grid;
      grid-template-columns: 80px 1fr 1fr;
      gap: 10mm;
      border: 1px solid #ddd;
      border-left-width: 6px;
      border-radius: 5px;
      padding: 8mm;
      background: #fafafa;
      page-break-inside: avoid;
    }
    
    .block-score {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      background: white;
      border-radius: 5px;
      padding: 5mm;
      box-shadow: inset 0 0 5px rgba(0,0,0,0.1);
    }
    
    .block-score .score-label {
      font-size: 9pt;
      font-weight: bold;
      color: #666;
      margin-bottom: 2mm;
    }
    
    .block-score .score-val {
      font-size: 28pt;
      font-weight: bold;
      color: #23356f;
      line-height: 1;
    }
    
    .block-score .score-max {
      font-size: 10pt;
      color: #666;
    }
    
    .block-body {
      padding-right: 5mm;
    }
    
    .block-body p {
      margin: 0 0 5mm 0;
      line-height: 1.5;
    }
    
    .questions {
      margin-top: 5mm;
    }
    
    .questions strong,
    .coaching strong,
    .activities strong {
      display: block;
      margin-bottom: 2mm;
      color: #23356f;
    }
    
    .block-questions {
      border-left: 1px solid #ddd;
      padding-left: 5mm;
    }
    
    .coaching {
      margin-bottom: 5mm;
    }
    
    .activities {
      font-style: italic;
    }
    
    .bottom-section {
      margin-top: 15mm;
      page-break-inside: avoid;
    }
    
    .bottom-section h3 {
      color: #23356f;
      border-bottom: 2px solid #23356f;
      padding-bottom: 3mm;
      margin-bottom: 8mm;
    }
    
    .response-section,
    .goals-section {
      margin-bottom: 10mm;
    }
    
    .response-section h4,
    .goals-section h4 {
      color: #23356f;
      margin-bottom: 5mm;
    }
    
    .write-box {
      border: 1px solid #999;
      min-height: 50mm;
      background: white;
      position: relative;
      padding: 5mm;
    }
    
    .write-lines {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-image: repeating-linear-gradient(
        transparent,
        transparent 7mm,
        #e0e0e0 7mm,
        #e0e0e0 7.5mm
      );
      pointer-events: none;
    }
    
    .date-field {
      margin-top: 5mm;
      text-align: right;
    }
    
    .date-field label {
      font-weight: bold;
      color: #666;
    }
    
    /* Question card styles */
    .question-card {
      text-align: center;
      animation: fadeIn 0.3s ease-in-out;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .likert-option {
      transition: all 0.2s ease;
    }
    
    .likert-option:hover {
      transform: scale(1.05);
    }
    
    .likert-option input[type="radio"]:checked + div {
      transform: scale(1.1);
      box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.1);
    }
    
    /* Anti-abuse styles */
    .rate-limit-warning {
      background-color: #fee;
      border: 1px solid #fcc;
      color: #c33;
      padding: 1rem;
      border-radius: 0.5rem;
      margin: 1rem 0;
    }
    
    /* Simple fix to ensure form is scrollable if needed */
    #registration-modal form {
      max-height: calc(85vh - 120px);
      overflow-y: auto;
    }
  </style>

  <script>
    // State management
    let currentQuestionIndex = 0;
    let responses = {};
    let userData = {};
    let questionnaireStartTime = null;
    let isRegistered = false;
    let currentScales = null;
    let currentAverages = null;
    
    // Anti-abuse tracking
    const RATE_LIMIT_KEY = 'vespa_questionnaire_attempts';
    const MAX_ATTEMPTS_PER_DAY = 3;
    const SCHOOL_DOMAIN_PATTERNS = ['.edu', '.ac.uk', '.sch.uk', '.school', '.college'];
    
    // Statement categories for scoring
    const statementCategories = {
      q1: 'VISION', q2: 'SYSTEMS', q3: 'VISION', q4: 'SYSTEMS', q5: 'ATTITUDE',
      q6: 'EFFORT', q7: 'PRACTICE', q8: 'ATTITUDE', q9: 'EFFORT', q10: 'ATTITUDE',
      q11: 'SYSTEMS', q12: 'PRACTICE', q13: 'ATTITUDE', q14: 'VISION', q15: 'PRACTICE',
      q16: 'VISION', q17: 'EFFORT', q18: 'SYSTEMS', q19: 'PRACTICE', q20: 'ATTITUDE',
      q21: 'EFFORT', q22: 'SYSTEMS', q23: 'PRACTICE', q24: 'ATTITUDE', q25: 'PRACTICE',
      q26: 'ATTITUDE', q27: 'ATTITUDE', q28: 'ATTITUDE'
    };
    
    // Define statements directly in JavaScript
    const statements = [
      { id: 'q1', text: "I've worked out the next steps in my life", category: 'VISION' },
      { id: 'q2', text: "I plan and organise my time to get my work done", category: 'SYSTEMS' },
      { id: 'q3', text: "I give a lot of attention to my career planning", category: 'VISION' },
      { id: 'q4', text: "I complete all my homework on time", category: 'SYSTEMS' },
      { id: 'q5', text: "No matter who you are, you can change your intelligence a lot", category: 'ATTITUDE' },
      { id: 'q6', text: "I use all my independent study time effectively", category: 'EFFORT' },
      { id: 'q7', text: "I test myself on important topics until I remember them", category: 'PRACTICE' },
      { id: 'q8', text: "I have a positive view of myself", category: 'ATTITUDE' },
      { id: 'q9', text: "I am a hard working student", category: 'EFFORT' },
      { id: 'q10', text: "I am confident in my academic ability", category: 'ATTITUDE' },
      { id: 'q11', text: "I always meet deadlines", category: 'SYSTEMS' },
      { id: 'q12', text: "I spread out my revision, rather than cramming at the last minute.", category: 'PRACTICE' },
      { id: 'q13', text: "I don't let a poor test/assessment result get me down for too long", category: 'ATTITUDE' },
      { id: 'q14', text: "I strive to achieve the goals I set for myself", category: 'VISION' },
      { id: 'q15', text: "I summarise important information in diagrams, tables or lists", category: 'PRACTICE' },
      { id: 'q16', text: "I enjoy learning new things", category: 'VISION' },
      { id: 'q17', text: "I'm not happy unless my work is the best it can be", category: 'EFFORT' },
      { id: 'q18', text: "I take good notes in class which are useful for revision", category: 'SYSTEMS' },
      { id: 'q19', text: "When revising I mix different kinds of topics/subjects in one study session", category: 'PRACTICE' },
      { id: 'q20', text: "I feel I can cope with the pressure at school/college/University", category: 'ATTITUDE' },
      { id: 'q21', text: "I work as hard as I can in most classes", category: 'EFFORT' },
      { id: 'q22', text: "My books/files are organised", category: 'SYSTEMS' },
      { id: 'q23', text: "I study by explaining difficult topics out loud", category: 'PRACTICE' },
      { id: 'q24', text: "I'm happy to ask questions in front of a group.", category: 'ATTITUDE' },
      { id: 'q25', text: "When revising, I work under timed conditions answering exam-style questions", category: 'PRACTICE' },
      { id: 'q26', text: "Your intelligence is something about you that you can change very much", category: 'ATTITUDE' },
      { id: 'q27', text: "I like hearing feedback about how I can improve", category: 'ATTITUDE' },
      { id: 'q28', text: "I can control my nerves in tests/practical assessments.", category: 'ATTITUDE' }
    ];
    
    const categories = {
      VISION: { color: 'bg-vision', textColor: 'text-vision', borderColor: 'border-vision', description: 'Your goals and future planning' },
      EFFORT: { color: 'bg-effort', textColor: 'text-effort', borderColor: 'border-effort', description: 'Your work ethic and perseverance' },
      SYSTEMS: { color: 'bg-systems', textColor: 'text-systems', borderColor: 'border-systems', description: 'Your organization and time management' },
      PRACTICE: { color: 'bg-practice', textColor: 'text-practice', borderColor: 'border-practice', description: 'Your study techniques and methods' },
      ATTITUDE: { color: 'bg-attitude', textColor: 'text-attitude', borderColor: 'border-attitude', description: 'Your mindset and resilience' }
    };
    
    // Check rate limiting
    function checkRateLimit() {
      const attempts = JSON.parse(localStorage.getItem(RATE_LIMIT_KEY) || '[]');
      const today = new Date().toDateString();
      const todayAttempts = attempts.filter(a => new Date(a.timestamp).toDateString() === today);
      
      if (todayAttempts.length >= MAX_ATTEMPTS_PER_DAY) {
        return false;
      }
      
      return true;
    }
    
    // Record attempt
    function recordAttempt() {
      const attempts = JSON.parse(localStorage.getItem(RATE_LIMIT_KEY) || '[]');
      attempts.push({
        timestamp: new Date().toISOString(),
        email: userData.email,
        school: userData.school
      });
      
      // Keep only last 7 days of attempts
      const sevenDaysAgo = new Date();
      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
      const recentAttempts = attempts.filter(a => new Date(a.timestamp) > sevenDaysAgo);
      
      localStorage.setItem(RATE_LIMIT_KEY, JSON.stringify(recentAttempts));
    }
    
    // Validate email domain
    function validateEmailDomain(email) {
      const domain = email.split('@')[1];
      if (!domain) return { valid: false, isSchool: false };
      
      const isSchoolEmail = SCHOOL_DOMAIN_PATTERNS.some(pattern => domain.includes(pattern));
      
      // Additional validation for suspicious patterns
      const suspiciousPatterns = ['student', 'pupil', 'learner'];
      const emailLocal = email.split('@')[0].toLowerCase();
      const isSuspicious = suspiciousPatterns.some(pattern => emailLocal.includes(pattern));
      
      return {
        valid: true,
        isSchool: isSchoolEmail,
        isSuspicious: isSuspicious
      };
    }

    function isFreeEmail(email) {
      const domain = email.split('@')[1]?.toLowerCase();
      if (!domain) return false;

      const freeDomains = [
        'gmail.com', 'hotmail.com', 'yahoo.com', 'outlook.com', 'aol.com',
        'icloud.com', 'mail.com', 'zoho.com', 'yandex.com', 'protonmail.com',
        'hotmail.co.uk', 'live.com', 'msn.com'
      ];

      return freeDomains.includes(domain);
    }
    
    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
      const startBtn = document.getElementById('start-questionnaire');
      const registrationModal = document.getElementById('registration-modal');
      const questionnaireModal = document.getElementById('questionnaire-modal');
      const registrationForm = document.getElementById('registration-form');
      const resultsModal = document.getElementById('results-modal');
      const resultsCloseBtn = document.getElementById('results-close-btn');
      
      // Handle modal close events
      resultsCloseBtn.addEventListener('click', function() {
        resultsModal.classList.add('hidden');
      });
      
      // Close modal when clicking outside
      resultsModal.addEventListener('click', function(e) {
        if (e.target === resultsModal) {
          resultsModal.classList.add('hidden');
        }
      });
      
      // ESC key to close modal
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          if (!resultsModal.classList.contains('hidden')) {
            resultsModal.classList.add('hidden');
          }
          if (!registrationModal.classList.contains('hidden')) {
            registrationModal.classList.add('hidden');
          }
          if (!questionnaireModal.classList.contains('hidden')) {
            questionnaireModal.classList.add('hidden');
          }
        }
      });
      
      startBtn.addEventListener('click', function() {
        if (!checkRateLimit()) {
          alert('You have reached the maximum number of attempts for today. Please try again tomorrow.');
          return;
        }
        
        registrationModal.classList.remove('hidden');
      });
      
      // Add enter key support for form submission
      registrationForm.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && e.target.type !== 'submit') {
          e.preventDefault();
          const submitBtn = registrationForm.querySelector('button[type="submit"]');
          if (submitBtn) submitBtn.click();
        }
      });
      
      registrationForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        userData = {
          name: formData.get('name'),
          email: formData.get('email'),
          jobTitle: formData.get('jobTitle'),
          school: formData.get('school'),
          level: formData.get('level'),
          interests: formData.getAll('interests')
        };
        
        // Validate email
        const emailInput = registrationForm.querySelector('input[name="email"]');
        const email = emailInput.value;
        
        // Remove existing error message
        let errorEl = emailInput.parentElement.querySelector('.email-error');
        if (errorEl) {
          errorEl.remove();
        }
        
        if (isFreeEmail(email)) {
          emailInput.focus();
          // Create and display error message
          errorEl = document.createElement('p');
          errorEl.textContent = 'Please use an official school or business email. Free email addresses are not supported.';
          errorEl.className = 'text-red-600 text-xs mt-1 email-error';
          emailInput.parentElement.appendChild(errorEl);
          return; // Stop form submission
        }
        
        const emailValidation = validateEmailDomain(userData.email);
        
        if (emailValidation.isSuspicious) {
          if (!confirm('This appears to be a student email address. This questionnaire is designed for educators. Are you an educator?')) {
            return;
          }
        }
        
        // Send lead notification immediately on registration
        try {
          const leadResponse = await fetch('/api/send-lead', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(userData)
          });
          
          if (!leadResponse.ok) {
            // Silently fail - don't interrupt the user experience
          }
        } catch (error) {
          // Don't block the user flow if lead email fails
        }
        
        // Record the attempt
        recordAttempt();
        
        // Store user data (in production, this would be sent to a server)
        localStorage.setItem('vespa_user_data', JSON.stringify(userData));
        isRegistered = true;
        
        // Close registration modal and open questionnaire
        registrationModal.classList.add('hidden');
        startQuestionnaire();
      });
    });
    
    // Start questionnaire
    function startQuestionnaire() {
      questionnaireStartTime = new Date();
      document.getElementById('questionnaire-modal').classList.remove('hidden');
      showQuestion(0);
    }
    
    // Show question
    function showQuestion(index) {
      const container = document.getElementById('question-container');
      const statement = statements[index];
      const category = categories[statement.category];
      
      container.innerHTML = `
        <div class="question-card">
          <div class="mb-4">
            <span class="inline-flex items-center gap-2 px-4 py-2 bg-gray-100 rounded-full">
              <div class="${category.color} w-8 h-8 rounded-full flex items-center justify-center">
                <span class="text-white font-bold text-sm">${statement.category.charAt(0)}</span>
              </div>
              <span class="font-semibold ${category.textColor}">${statement.category}</span>
            </span>
          </div>
          
          <h3 class="text-2xl font-bold text-gray-800 mb-8">${statement.text}</h3>
          
          <div class="likert-scale flex justify-between items-center gap-4 max-w-lg mx-auto">
            ${[1, 2, 3, 4, 5].map(value => `
              <label class="likert-option cursor-pointer flex-1">
                <input type="radio" name="current-question" value="${value}" class="sr-only peer" 
                  ${responses[statement.id] === value ? 'checked' : ''}>
                <div class="w-16 h-16 rounded-full border-2 border-gray-300 flex items-center justify-center peer-checked:bg-gradient-to-r peer-checked:from-theme-secondary peer-checked:to-theme-accent1 peer-checked:text-white peer-checked:border-transparent hover:border-theme-secondary transition-all">
                  ${value}
                </div>
                <p class="text-xs text-gray-500 mt-2">
                  ${value === 1 ? 'Strongly<br/>Disagree' : 
                    value === 2 ? 'Disagree' : 
                    value === 3 ? 'Neutral' : 
                    value === 4 ? 'Agree' : 
                    'Strongly<br/>Agree'}
                </p>
              </label>
            `).join('')}
          </div>
        </div>
      `;
      
      // Update progress
      updateProgress(index);
      
      // Add event listeners
      const radios = container.querySelectorAll('input[type="radio"]');
      radios.forEach(radio => {
        radio.addEventListener('change', function() {
          responses[statement.id] = parseInt(this.value);
          document.getElementById('next-btn').disabled = false;
        });
      });
      
      // Update navigation buttons
      updateNavigationButtons(index);
    }
    
    // Update progress
    function updateProgress(index) {
      const percentage = Math.round(((index + 1) / statements.length) * 100);
      document.getElementById('current-question').textContent = index + 1;
      document.getElementById('progress-percentage').textContent = percentage;
      document.getElementById('progress-bar').style.width = percentage + '%';
    }
    
    // Update navigation buttons
    function updateNavigationButtons(index) {
      const prevBtn = document.getElementById('prev-btn');
      const nextBtn = document.getElementById('next-btn');
      
      prevBtn.disabled = index === 0;
      nextBtn.disabled = !responses[statements[index].id];
      
      if (index === statements.length - 1) {
        nextBtn.textContent = 'Complete';
      } else {
        nextBtn.textContent = 'Next';
      }
      
      // Remove old event listeners
      const newPrevBtn = prevBtn.cloneNode(true);
      const newNextBtn = nextBtn.cloneNode(true);
      prevBtn.parentNode.replaceChild(newPrevBtn, prevBtn);
      nextBtn.parentNode.replaceChild(newNextBtn, nextBtn);
      
      // Add new event listeners
      newPrevBtn.addEventListener('click', () => {
        if (index > 0) {
          currentQuestionIndex--;
          showQuestion(currentQuestionIndex);
        }
      });
      
      newNextBtn.addEventListener('click', () => {
        if (index < statements.length - 1) {
          currentQuestionIndex++;
          showQuestion(currentQuestionIndex);
        } else {
          completeQuestionnaire();
        }
      });
    }
    
    // Scoring functions
    function calculateScale(value, thresholds) {
      for (let i = 0; i < thresholds.length; i++) {
        if (value < thresholds[i]) return i + 1;
      }
      return 10;
    }
    
    function getVisionScale(vision) {
      return calculateScale(vision, [1.9, 2.7, 3.3, 3.6, 3.8, 4.1, 4.4, 4.7, 5.0]);
    }
    
    function getEffortScale(effort) {
      return calculateScale(effort, [2.3, 2.64, 2.95, 3.33, 3.675, 4.02, 4.365, 4.71, 5.0]);
    }
    
    function getSystemsScale(systems) {
      return calculateScale(systems, [2.16, 2.5, 2.85, 3.19, 3.53, 3.875, 4.22, 4.56, 5.0]);
    }
    
    function getPracticeScale(practice) {
      return calculateScale(practice, [1.86, 2.19, 2.53, 2.87, 3.2, 3.5, 3.87, 4.2, 5.0]);
    }
    
    function getAttitudeScale(attitude) {
      return calculateScale(attitude, [2.24, 2.53, 2.82, 3.11, 3.4, 3.69, 3.98, 4.27, 5.0]);
    }
    
    // Complete questionnaire
    function completeQuestionnaire() {
      // Calculate scores
      const categoryScores = {
        VISION: [],
        EFFORT: [],
        SYSTEMS: [],
        PRACTICE: [],
        ATTITUDE: []
      };
      
      for (const [question, value] of Object.entries(responses)) {
        const category = statementCategories[question];
        categoryScores[category].push(value);
      }
      
      const averages = {};
      for (const [category, scores] of Object.entries(categoryScores)) {
        averages[category] = scores.reduce((a, b) => a + b, 0) / scores.length;
      }
      
      const scales = {
        VISION: getVisionScale(averages.VISION),
        EFFORT: getEffortScale(averages.EFFORT),
        SYSTEMS: getSystemsScale(averages.SYSTEMS),
        PRACTICE: getPracticeScale(averages.PRACTICE),
        ATTITUDE: getAttitudeScale(averages.ATTITUDE)
      };
      
      // Close questionnaire modal
      document.getElementById('questionnaire-modal').classList.add('hidden');
      
      // Store scales and averages globally for email function
      currentScales = scales;
      currentAverages = averages;
      
      // Generate and show results
      generateReport(scales, averages);
    }
    
    // Import report text data for generating comprehensive report
    async function loadReportData() {
      try {
        const response = await fetch('/reporttext_restructured_complete.json');
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return await response.json();
      } catch (error) {
        // Return a fallback structure
        return {
          report_data: {
            'Level 3': {
              'Vision': {
                'High': { english: { description: 'You have a strong vision for your future.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You have a moderate vision for your future.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from developing a clearer vision.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing your future vision.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Effort': {
                'High': { english: { description: 'You consistently put in strong effort.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You put in good effort most of the time.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from increasing your effort.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on building consistent effort habits.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Systems': {
                'High': { english: { description: 'You have excellent organizational systems.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You have good organizational systems.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from better organization.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing organizational systems.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Practice': {
                'High': { english: { description: 'You use excellent study practices.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You use good study practices.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could improve your study practices.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing effective study practices.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Attitude': {
                'High': { english: { description: 'You have a very positive attitude.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'You have a generally positive attitude.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'You could benefit from a more positive attitude.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing a more positive mindset.', questions: '', activities: '', coaching_questions: '' } }
              },
              'Overall': {
                'High': { english: { description: 'Overall, you show strong learning characteristics.', questions: '', activities: '', coaching_questions: '' } },
                'Medium': { english: { description: 'Overall, you show good learning characteristics.', questions: '', activities: '', coaching_questions: '' } },
                'Low': { english: { description: 'There are several areas you could focus on developing.', questions: '', activities: '', coaching_questions: '' } },
                'Very Low': { english: { description: 'Focus on developing your learning characteristics across all areas.', questions: '', activities: '', coaching_questions: '' } }
              }
            }
          }
        };
      }
    }
    
    // Generate report
    async function generateReport(scales, averages) {
      const reportContainer = document.getElementById('pdf-report-container');
      const resultsModal = document.getElementById('results-modal');
      const resultsContent = document.getElementById('results-content');
      
      // Load report data
      const reportData = await loadReportData();
      
      // Calculate overall score (average of all categories)
      const overallScore = Math.round(Object.values(scales).reduce((a, b) => a + b, 0) / Object.keys(scales).length);
      
      // Prepare student data for the report
      const studentData = {
        name: userData.name,
        email: userData.email,
        school: userData.school,
        date: new Date().toISOString(),
        scores: {
          vision: scales.VISION,
          effort: scales.EFFORT,
          systems: scales.SYSTEMS,
          practice: scales.PRACTICE,
          attitude: scales.ATTITUDE,
          overall: overallScore
        },
        level: userData.level || 'Level 3' // Use the selected level from the form
      };
      
      // Function to determine performance rating based on user requirements
      function getPerformanceRating(score) {
        if (score < 4) return 'Very Low';  // <4 vlow
        if (score < 6) return 'Low';       // <6 low  
        if (score < 9) return 'Medium';    // <9 medium
        return 'High';                     // ≥9 high
      }
      
      // Function to get report content for a category using correct JSON structure
      function getReportContent(category, score, level) {
        const categoryKey = category.charAt(0).toUpperCase() + category.slice(1);
        const rating = getPerformanceRating(score);
        
        // Map to correct JSON category names (Systems -> System in JSON)
        const jsonCategoryMap = {
          'Vision': 'Vision',
          'Effort': 'Effort', 
          'Systems': 'System',  // JSON uses "System" not "Systems"
          'Practice': 'Practice',
          'Attitude': 'Attitude'
        };
        
        const jsonCategory = jsonCategoryMap[categoryKey] || categoryKey;
        
        // The JSON structure is: category -> rating -> english
        const content = reportData[jsonCategory]?.[rating]?.english || {
          description: `You scored ${score} in ${categoryKey}. This indicates your current level in this area.`,
          questions: 'What are your main learning goals?',
          activities: 'Goal setting activities',
          coaching_questions: 'How can you improve in this area?'
        };
        
        return content;
      }
      
      // Generate comprehensive PDF report content - EXACT MATCH TO REFERENCE IMAGE
      const reportHTML = `
        <div class="vespa-report">
          <div class="report-header">
            <div class="student-info">
              <div class="student-name"><strong>STUDENT:</strong> ${studentData.name}</div>
              <div class="report-date"><strong>DATE:</strong> ${new Date(studentData.date).toLocaleDateString('en-GB')}</div>
              <div class="cycle-info"><strong>CYCLE:</strong> <span class="cycle-number">1</span></div>
              <div class="level-info"><strong>LEVEL:</strong> ${studentData.level}</div>
            </div>

          </div>
          
          <div class="vespa-main-content">
            <div class="vespa-report-header">
              <div class="report-label">VESPA REPORT</div>
              <div class="coaching-label">COACHING QUESTIONS</div>
            </div>
            
            ${['VISION', 'EFFORT', 'SYSTEMS', 'PRACTICE', 'ATTITUDE'].map((category, index) => {
              const categoryKey = category.toLowerCase();
              const score = studentData.scores[categoryKey];
              const content = getReportContent(categoryKey, score, studentData.level);
              const categoryColors = {
                'VISION': '#ffab40',
                'EFFORT': '#a9c8f5', 
                'SYSTEMS': '#90d66f',
                'PRACTICE': '#9c57c0',
                'ATTITUDE': '#f567ea'
              };
              
              // Format reflection questions as bullet points
              const formatQuestions = (questions) => {
                if (!questions) return '';
                // Split by common delimiters and create bullet points
                const questionList = questions.split(/[•\n\r]/).filter(q => q.trim());
                return questionList.map(q => `• ${q.trim()}`).join('<br>');
              };
              
              return `
                <div class="vespa-row" style="border-left: 4px solid ${categoryColors[category]}">
                  <div class="vespa-element">
                    <div class="element-header" style="background-color: ${categoryColors[category]}">
                      <div class="element-letter">${category}</div>
                      <div class="element-score">
                        <div class="score-number">${score}</div>
                      </div>
                    </div>
                    <div class="element-name">${category}</div>
                    <div class="element-description">Score</div>
                  </div>
                  
                  <div class="vespa-description">
                    <div class="description-text">${content.description || 'Description not available for this score level.'}</div>
                    <div class="average-score">Average score: ${averages[category] || '0.00'}</div>
                    
                    <div class="reflection-questions">
                      <strong>Reflection Questions:</strong><br>
                      ${formatQuestions(content.questions)}
                    </div>
                    
                    <div class="suggested-activities">
                      <strong>Activities:</strong> <em>${content.activities || 'No specific activities listed'}</em>
                    </div>
                  </div>
                  
                  <div class="coaching-questions">
                    <div class="coaching-content">
                      ${content.coaching_questions || 'What skills are you learning that will benefit your future self?'}
                    </div>
                    
                    <div class="suggested-activities-detailed">
                      <strong>Suggested Activities:</strong> ${content.activities || 'Goal setting, Vision boarding, Career exploration'}
                    </div>
                  </div>
                </div>
              `;
            }).join('')}
          </div>
          
          <div class="personal-reflection">
            <h3>Personal Reflection</h3>
            <div class="reflection-question">
              <strong>What does this report tell you about your learning mindset?</strong>
            </div>
            <div class="write-area"></div>
          </div>
          
          <div class="action-plan">
            <h3>Action Plan</h3>
            <div class="action-question">
              <strong>Based on your scores, what will you focus on improving?</strong>
            </div>
            <div class="write-area"></div>
          </div>
        </div>
      `;
      
      reportContainer.innerHTML = reportHTML;
      
      // Show results modal with download option
      resultsContent.innerHTML = `
        <div class="text-center mb-8">
          <h2 class="text-4xl font-bold text-gray-800 mb-4">Your VESPA Learning Profile</h2>
          <p class="text-xl text-gray-600">Here's how you scored across the five dimensions</p>
        </div>
        
        <div class="grid md:grid-cols-2 gap-8 mb-8">
          <div>
            <canvas id="vespa-chart" width="400" height="400"></canvas>
          </div>
          
          <div class="space-y-4">
            ${Object.entries(scales).map(([category, score]) => `
              <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <div class="flex items-center gap-3">
                  <div class="${categories[category].color} w-10 h-10 rounded-full flex items-center justify-center">
                    <span class="text-white font-bold">${category.charAt(0)}</span>
                  </div>
                  <div>
                    <h3 class="font-bold text-lg">${category}</h3>
                    <p class="text-sm text-gray-600">${categories[category].description}</p>
                  </div>
                </div>
                <div class="text-right">
                  <div class="text-3xl font-bold ${getScoreColor(score)}">${score}/10</div>
                  <div class="text-xs text-gray-500">Average: ${averages[category].toFixed(2)}</div>
                </div>
              </div>
            `).join('')}
          </div>
        </div>
        
        <!-- SEND REPORT SECTION -->
        <div class="bg-gradient-to-r from-blue-50 to-cyan-50 border border-cyan-200 p-6 rounded-xl mb-8">
          <h3 class="text-2xl font-bold mb-4 text-gray-800">📈 Your Personalised Report</h3>
          <p class="text-gray-700 mb-6">
            Get your detailed VESPA report with coaching questions and recommendations emailed to you.
          </p>
          <div class="flex flex-col gap-4">
            <button onclick="emailAndGetAccess(event)" class="w-full px-8 py-4 bg-gradient-to-r from-green-500 to-blue-600 text-white font-bold rounded-lg hover:from-green-600 hover:to-blue-700 transition-all duration-300 text-xl shadow-lg" style="display: block !important; visibility: visible !important;">
              📧 Send Me My Report
            </button>
          </div>
        </div>
        
        <div class="text-center">
          <button id="close-results-btn" class="text-gray-500 hover:text-gray-700 underline">
            Close Results
          </button>
        </div>
      `;
      
      resultsModal.classList.remove('hidden');
      
      // Add event listener for the close button within the results content
      setTimeout(() => {
        const closeBtn = document.getElementById('close-results-btn');
        if (closeBtn) {
          closeBtn.addEventListener('click', function() {
            document.getElementById('results-modal').classList.add('hidden');
          });
        }
      }, 100);

      // Initialize chart
      setTimeout(() => {
        try {
          const ctx = document.getElementById('vespa-chart').getContext('2d');
          if (typeof Chart !== 'undefined') {
            new Chart(ctx, {
              type: 'radar',
              data: {
                labels: Object.keys(scales),
                datasets: [{
                  label: 'Your VESPA Profile',
                  data: Object.values(scales),
                  backgroundColor: 'rgba(0, 229, 219, 0.2)',
                  borderColor: 'rgba(0, 229, 219, 1)',
                  borderWidth: 2,
                  pointBackgroundColor: 'rgba(0, 229, 219, 1)',
                  pointBorderColor: '#fff',
                  pointHoverBackgroundColor: '#fff',
                  pointHoverBorderColor: 'rgba(0, 229, 219, 1)'
                }]
              },
              options: {
                scales: {
                  r: {
                    beginAtZero: true,
                    max: 10,
                    ticks: {
                      stepSize: 2
                    }
                  }
                },
                plugins: {
                  legend: {
                    display: false
                  }
                }
              }
            });
          }
        } catch (error) {
          // Chart initialization failed
        }
      }, 200);
    }
    
    function getScoreColor(score) {
      if (score >= 8) return 'text-green-600';
      if (score >= 6) return 'text-yellow-600';
      if (score >= 4) return 'text-orange-600';
      return 'text-red-600';
    }
    
    // Removed PDF download function - users get report via email attachment only
    
    // Email report and get access function
    window.emailAndGetAccess = async function(event) {
      try {
        
        // Show loading state
        const button = event.currentTarget || event.target;
        const originalText = button.innerHTML;
        button.disabled = true;
        button.innerHTML = '<svg class="inline-block w-5 h-5 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Sending report...';
        
        // Check if we have the required data
        if (!userData || !userData.email) {
          throw new Error('User data is missing');
        }
        
        if (!currentScales || !currentAverages) {
          throw new Error('Report data is missing');
        }
        
        // Get the report HTML (no longer needed for the new template approach)
        const reportHTML = '';
        
        // Add interests to userData if not already present
        if (!userData.interests) {
          userData.interests = [];
        }
        
        // Prepare the data to send - simplified for the new backend approach
        const requestData = {
          userData: userData,
          reportHTML: reportHTML,
          scores: currentScales,
          averages: currentAverages,
          level: userData.level || 'Level 3'
        };
        
        // Send the report via API
        const response = await fetch('/api/send-report', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(requestData)
        });
        
        if (!response.ok) {
          const errorText = await response.text();
          throw new Error(`HTTP error! status: ${response.status}, response: ${errorText}`);
        }
        
        const result = await response.json();
        
        if (result.success) {
          // Show success message
          button.innerHTML = '<svg class="inline-block w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Report sent!';
          button.classList.add('bg-green-500', 'text-white');
          button.classList.remove('from-theme-secondary', 'to-theme-accent1');
          
          // Show thank you message
          setTimeout(() => {
            const resultsContent = document.getElementById('results-content');
            resultsContent.innerHTML = `
              <div class="text-center py-12">
                <div class="mb-6">
                  <svg class="w-24 h-24 mx-auto text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <h2 class="text-3xl font-bold text-gray-800 mb-4">Report Sent Successfully!</h2>
                <p class="text-lg text-gray-600 mb-6">
                  We've emailed your VESPA report to <strong>${userData.email}</strong>
                </p>
                <p class="text-gray-600 mb-8">
                  A member of our team will be in touch shortly to discuss how the VESPA programme can help your school.
                </p>
                <div class="space-y-4">
                  <a href="/" class="inline-block px-6 py-3 bg-gradient-to-r from-theme-secondary to-theme-accent1 text-theme-dark font-bold rounded-lg hover:scale-105 transition-transform">
                    Return to Homepage
                  </a>
                  <p class="text-sm text-gray-500">
                    Didn't receive the email? Check your spam folder or <a href="/contact" class="text-theme-secondary hover:underline">contact us</a>
                  </p>
                </div>
              </div>
            `;
          }, 1500);
        } else {
          // Show error
          throw new Error(result.error || 'Unknown error occurred');
        }
      } catch (error) {
        // Reset button state
        const button = event.currentTarget || event.target || document.querySelector('button[onclick*="emailAndGetAccess"]');
        if (button) {
          button.innerHTML = originalText;
          button.disabled = false;
        }
        
        alert(`Sorry, there was an error sending your report: ${error.message}. Please contact support if the issue persists.`);
      }
    };
  </script>
  
  <!-- Include Chart.js for the radar chart -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</Layout>
