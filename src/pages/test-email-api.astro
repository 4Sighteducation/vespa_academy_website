---
export const prerender = false;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>VESPA Email API Test</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #102f62;
            margin-bottom: 30px;
        }
        .test-section {
            margin-bottom: 40px;
            padding: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
        }
        button {
            background-color: #00e5db;
            color: #102f62;
            border: none;
            padding: 12px 24px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
        }
        button:hover {
            background-color: #00c5c0;
        }
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        .result {
            margin-top: 20px;
            padding: 15px;
            border-radius: 4px;
            display: none;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        pre {
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 4px;
            overflow-x: auto;
        }
        input {
            width: 100%;
            padding: 8px;
            margin: 5px 0 15px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>VESPA Email API Test</h1>
        
        <div class="test-section">
            <h2>Test SendGrid Connection</h2>
            <p>This will send a test email to tony@vespa.academy</p>
            <button onclick="testSendGrid()">Send Test Email</button>
            <div id="sendgrid-result" class="result"></div>
        </div>

        <div class="test-section">
            <h2>Test Full Report Email</h2>
            <p>Send a complete VESPA report with sample data</p>
            <label>
                Email Address:
                <input type="email" id="report-email" value="tony@vespa.academy" />
            </label>
            <label>
                Name:
                <input type="text" id="report-name" value="Test User" />
            </label>
            <label>
                School:
                <input type="text" id="report-school" value="Test School" />
            </label>
            <button onclick="testReportEmail()">Send Report Email</button>
            <div id="report-result" class="result"></div>
        </div>
    </div>

    <script>
        async function testSendGrid() {
            const button = event.target;
            const resultDiv = document.getElementById('sendgrid-result');
            
            button.disabled = true;
            resultDiv.style.display = 'none';
            
            try {
                const response = await fetch('/api/test-sendgrid', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({})
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    resultDiv.className = 'result success';
                    resultDiv.innerHTML = `
                        <strong>Success!</strong><br>
                        ${data.message}<br>
                        <pre>${JSON.stringify(data.config, null, 2)}</pre>
                    `;
                } else {
                    resultDiv.className = 'result error';
                    resultDiv.innerHTML = `
                        <strong>Error!</strong><br>
                        ${data.error}<br>
                        <pre>${JSON.stringify(data.details, null, 2)}</pre>
                    `;
                }
            } catch (error) {
                resultDiv.className = 'result error';
                resultDiv.innerHTML = `
                    <strong>Network Error!</strong><br>
                    ${error.message}
                `;
            }
            
            resultDiv.style.display = 'block';
            button.disabled = false;
        }

        async function testReportEmail() {
            const button = event.target;
            const resultDiv = document.getElementById('report-result');
            
            button.disabled = true;
            resultDiv.style.display = 'none';
            
            const testData = {
                user_email: document.getElementById('report-email').value,
                user_name: document.getElementById('report-name').value,
                user_school: document.getElementById('report-school').value,
                vision_score: 7.5,
                vision_avg: 6.8,
                effort_score: 8.2,
                effort_avg: 7.1,
                systems_score: 6.9,
                systems_avg: 6.5,
                practice_score: 7.8,
                practice_avg: 7.2,
                attitude_score: 8.5,
                attitude_avg: 7.9,
                overall_score: 7.8,
                send_pdf: false // Disable PDF for now to test email only
            };
            
            try {
                const response = await fetch('/api/send-report', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(testData)
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    resultDiv.className = 'result success';
                    resultDiv.innerHTML = `
                        <strong>Success!</strong><br>
                        ${data.message}<br>
                        PDF Attached: ${data.pdf_attached ? 'Yes' : 'No'}<br>
                        <pre>${JSON.stringify(testData, null, 2)}</pre>
                    `;
                } else {
                    resultDiv.className = 'result error';
                    resultDiv.innerHTML = `
                        <strong>Error!</strong><br>
                        ${data.error}<br>
                        <pre>${JSON.stringify(data.details || data.sendgrid_errors, null, 2)}</pre>
                    `;
                }
            } catch (error) {
                resultDiv.className = 'result error';
                resultDiv.innerHTML = `
                    <strong>Network Error!</strong><br>
                    ${error.message}
                `;
            }
            
            resultDiv.style.display = 'block';
            button.disabled = false;
        }
    </script>
</body>
</html> 